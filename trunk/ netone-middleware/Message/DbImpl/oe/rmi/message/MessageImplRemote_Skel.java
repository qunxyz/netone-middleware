// Skeleton class generated by rmic, do not edit.
// Contents subject to change without notice.

package oe.rmi.message;

public final class MessageImplRemote_Skel
    implements java.rmi.server.Skeleton
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("void deleteMessage(java.lang.String)"),
	new java.rmi.server.Operation("void deleteMessage(java.lang.String[])"),
	new java.rmi.server.Operation("oe.rmi.message.UmsBussformworklist load(java.lang.String)"),
	new java.rmi.server.Operation("java.util.List personMessage(java.lang.String, int, int, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List query(oe.rmi.message.UmsBussformworklist, int, int, java.lang.String)"),
	new java.rmi.server.Operation("java.io.Serializable send(java.util.List)[]"),
	new java.rmi.server.Operation("java.io.Serializable send(oe.rmi.message.UmsBussformworklist)"),
	new java.rmi.server.Operation("void setEmail(java.lang.String)"),
	new java.rmi.server.Operation("void setPassword(java.lang.String)"),
	new java.rmi.server.Operation("int totalNum(java.lang.String, java.lang.String)")
    };
    
    private static final long interfaceHash = -482226069528446716L;
    
    public java.rmi.server.Operation[] getOperations() {
	return (java.rmi.server.Operation[]) operations.clone();
    }
    
    public void dispatch(java.rmi.Remote obj, java.rmi.server.RemoteCall call, int opnum, long hash)
	throws java.lang.Exception
    {
	if (opnum < 0) {
	    if (hash == 8126804961426121883L) {
		opnum = 0;
	    } else if (hash == 8211952498414971988L) {
		opnum = 1;
	    } else if (hash == 3298600082394219535L) {
		opnum = 2;
	    } else if (hash == 7944386774538378821L) {
		opnum = 3;
	    } else if (hash == -646501449162973294L) {
		opnum = 4;
	    } else if (hash == -3767222925184678157L) {
		opnum = 5;
	    } else if (hash == -7208823029971187292L) {
		opnum = 6;
	    } else if (hash == -4117224176847888539L) {
		opnum = 7;
	    } else if (hash == -2859963922075875313L) {
		opnum = 8;
	    } else if (hash == -356576425643246426L) {
		opnum = 9;
	    } else {
		throw new java.rmi.UnmarshalException("invalid method hash");
	    }
	} else {
	    if (hash != interfaceHash)
		throw new java.rmi.server.SkeletonMismatchException("interface hash mismatch");
	}
	
	oe.rmi.message.MessageImplRemote server = (oe.rmi.message.MessageImplRemote) obj;
	switch (opnum) {
	case 0: // deleteMessage(String)
	{
	    java.lang.String $param_String_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_String_1 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    server.deleteMessage($param_String_1);
	    try {
		call.getResultStream(true);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 1: // deleteMessage(String[])
	{
	    java.lang.String[] $param_arrayOf_String_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_arrayOf_String_1 = (java.lang.String[]) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    server.deleteMessage($param_arrayOf_String_1);
	    try {
		call.getResultStream(true);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 2: // load(String)
	{
	    java.lang.String $param_String_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_String_1 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    oe.rmi.message.UmsBussformworklist $result = server.load($param_String_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 3: // personMessage(String, int, int, String)
	{
	    java.lang.String $param_String_1;
	    int $param_int_2;
	    int $param_int_3;
	    java.lang.String $param_String_4;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_String_1 = (java.lang.String) in.readObject();
		$param_int_2 = in.readInt();
		$param_int_3 = in.readInt();
		$param_String_4 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.util.List $result = server.personMessage($param_String_1, $param_int_2, $param_int_3, $param_String_4);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 4: // query(UmsBussformworklist, int, int, String)
	{
	    oe.rmi.message.UmsBussformworklist $param_UmsBussformworklist_1;
	    int $param_int_2;
	    int $param_int_3;
	    java.lang.String $param_String_4;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsBussformworklist_1 = (oe.rmi.message.UmsBussformworklist) in.readObject();
		$param_int_2 = in.readInt();
		$param_int_3 = in.readInt();
		$param_String_4 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.util.List $result = server.query($param_UmsBussformworklist_1, $param_int_2, $param_int_3, $param_String_4);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 5: // send(List)
	{
	    java.util.List $param_List_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_List_1 = (java.util.List) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.io.Serializable[] $result = server.send($param_List_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 6: // send(UmsBussformworklist)
	{
	    oe.rmi.message.UmsBussformworklist $param_UmsBussformworklist_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsBussformworklist_1 = (oe.rmi.message.UmsBussformworklist) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.io.Serializable $result = server.send($param_UmsBussformworklist_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 7: // setEmail(String)
	{
	    java.lang.String $param_String_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_String_1 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    server.setEmail($param_String_1);
	    try {
		call.getResultStream(true);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 8: // setPassword(String)
	{
	    java.lang.String $param_String_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_String_1 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    server.setPassword($param_String_1);
	    try {
		call.getResultStream(true);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 9: // totalNum(String, String)
	{
	    java.lang.String $param_String_1;
	    java.lang.String $param_String_2;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_String_1 = (java.lang.String) in.readObject();
		$param_String_2 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    int $result = server.totalNum($param_String_1, $param_String_2);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeInt($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	default:
	    throw new java.rmi.UnmarshalException("invalid method number");
	}
    }
}
