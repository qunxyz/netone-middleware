// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package oe.midware.dyform.service;

public final class DyFormServiceImpl_Stub
    extends java.rmi.server.RemoteStub
    implements oe.midware.dyform.service.DyFormService, java.rmi.Remote
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("java.lang.String addData(java.lang.String, oe.cav.bean.logic.bus.TCsBus)"),
	new java.rmi.server.Operation("boolean deleteData(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List fetchColumnList(java.lang.String)"),
	new java.rmi.server.Operation("java.util.List fetchColumnListUrl(java.lang.String)"),
	new java.rmi.server.Operation("java.util.Map fetchTitleInfos(java.lang.String)"),
	new java.rmi.server.Operation("oe.cav.bean.logic.bus.TCsBus loadData(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("oe.cav.bean.logic.form.TCsForm loadForm(java.lang.String)"),
	new java.rmi.server.Operation("oe.cav.bean.logic.form.TCsForm loadFormUrl(java.lang.String)"),
	new java.rmi.server.Operation("boolean modifyData(oe.cav.bean.logic.bus.TCsBus)"),
	new java.rmi.server.Operation("java.util.List queryData(oe.cav.bean.logic.bus.TCsBus, int, int, java.lang.String)"),
	new java.rmi.server.Operation("int queryDataNum(oe.cav.bean.logic.bus.TCsBus, java.lang.String)")
    };
    
    private static final long interfaceHash = 3901115482363135351L;
    
    private static final long serialVersionUID = 2;
    
    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_addData_0;
    private static java.lang.reflect.Method $method_deleteData_1;
    private static java.lang.reflect.Method $method_fetchColumnList_2;
    private static java.lang.reflect.Method $method_fetchColumnListUrl_3;
    private static java.lang.reflect.Method $method_fetchTitleInfos_4;
    private static java.lang.reflect.Method $method_loadData_5;
    private static java.lang.reflect.Method $method_loadForm_6;
    private static java.lang.reflect.Method $method_loadFormUrl_7;
    private static java.lang.reflect.Method $method_modifyData_8;
    private static java.lang.reflect.Method $method_queryData_9;
    private static java.lang.reflect.Method $method_queryDataNum_10;
    
    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		new java.lang.Class[] {
		    java.rmi.Remote.class,
		    java.lang.reflect.Method.class,
		    java.lang.Object[].class,
		    long.class
		});
	    useNewInvoke = true;
	    $method_addData_0 = oe.midware.dyform.service.DyFormService.class.getMethod("addData", new java.lang.Class[] {java.lang.String.class, oe.cav.bean.logic.bus.TCsBus.class});
	    $method_deleteData_1 = oe.midware.dyform.service.DyFormService.class.getMethod("deleteData", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_fetchColumnList_2 = oe.midware.dyform.service.DyFormService.class.getMethod("fetchColumnList", new java.lang.Class[] {java.lang.String.class});
	    $method_fetchColumnListUrl_3 = oe.midware.dyform.service.DyFormService.class.getMethod("fetchColumnListUrl", new java.lang.Class[] {java.lang.String.class});
	    $method_fetchTitleInfos_4 = oe.midware.dyform.service.DyFormService.class.getMethod("fetchTitleInfos", new java.lang.Class[] {java.lang.String.class});
	    $method_loadData_5 = oe.midware.dyform.service.DyFormService.class.getMethod("loadData", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_loadForm_6 = oe.midware.dyform.service.DyFormService.class.getMethod("loadForm", new java.lang.Class[] {java.lang.String.class});
	    $method_loadFormUrl_7 = oe.midware.dyform.service.DyFormService.class.getMethod("loadFormUrl", new java.lang.Class[] {java.lang.String.class});
	    $method_modifyData_8 = oe.midware.dyform.service.DyFormService.class.getMethod("modifyData", new java.lang.Class[] {oe.cav.bean.logic.bus.TCsBus.class});
	    $method_queryData_9 = oe.midware.dyform.service.DyFormService.class.getMethod("queryData", new java.lang.Class[] {oe.cav.bean.logic.bus.TCsBus.class, int.class, int.class, java.lang.String.class});
	    $method_queryDataNum_10 = oe.midware.dyform.service.DyFormService.class.getMethod("queryDataNum", new java.lang.Class[] {oe.cav.bean.logic.bus.TCsBus.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }
    
    // constructors
    public DyFormServiceImpl_Stub() {
	super();
    }
    public DyFormServiceImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addData(String, TCsBus)
    public java.lang.String addData(java.lang.String $param_String_1, oe.cav.bean.logic.bus.TCsBus $param_TCsBus_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_addData_0, new java.lang.Object[] {$param_String_1, $param_TCsBus_2}, 1598616788026202948L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_TCsBus_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of deleteData(String, String)
    public boolean deleteData(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_deleteData_1, new java.lang.Object[] {$param_String_1, $param_String_2}, 1956327430858575990L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchColumnList(String)
    public java.util.List fetchColumnList(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchColumnList_2, new java.lang.Object[] {$param_String_1}, -5555964671379842530L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchColumnListUrl(String)
    public java.util.List fetchColumnListUrl(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchColumnListUrl_3, new java.lang.Object[] {$param_String_1}, -8139421515388001439L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 3, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchTitleInfos(String)
    public java.util.Map fetchTitleInfos(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchTitleInfos_4, new java.lang.Object[] {$param_String_1}, -5124103029656505588L);
		return ((java.util.Map) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 4, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.Map $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.Map) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of loadData(String, String)
    public oe.cav.bean.logic.bus.TCsBus loadData(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_loadData_5, new java.lang.Object[] {$param_String_1, $param_String_2}, 1241905952568576176L);
		return ((oe.cav.bean.logic.bus.TCsBus) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 5, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.cav.bean.logic.bus.TCsBus $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.cav.bean.logic.bus.TCsBus) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of loadForm(String)
    public oe.cav.bean.logic.form.TCsForm loadForm(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_loadForm_6, new java.lang.Object[] {$param_String_1}, -4471333813938396406L);
		return ((oe.cav.bean.logic.form.TCsForm) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 6, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.cav.bean.logic.form.TCsForm $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.cav.bean.logic.form.TCsForm) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of loadFormUrl(String)
    public oe.cav.bean.logic.form.TCsForm loadFormUrl(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_loadFormUrl_7, new java.lang.Object[] {$param_String_1}, -1200165427774053191L);
		return ((oe.cav.bean.logic.form.TCsForm) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 7, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.cav.bean.logic.form.TCsForm $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.cav.bean.logic.form.TCsForm) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of modifyData(TCsBus)
    public boolean modifyData(oe.cav.bean.logic.bus.TCsBus $param_TCsBus_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_modifyData_8, new java.lang.Object[] {$param_TCsBus_1}, -2700501398074747510L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 8, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsBus_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryData(TCsBus, int, int, String)
    public java.util.List queryData(oe.cav.bean.logic.bus.TCsBus $param_TCsBus_1, int $param_int_2, int $param_int_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryData_9, new java.lang.Object[] {$param_TCsBus_1, new java.lang.Integer($param_int_2), new java.lang.Integer($param_int_3), $param_String_4}, 8134596843927737316L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 9, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsBus_1);
		    out.writeInt($param_int_2);
		    out.writeInt($param_int_3);
		    out.writeObject($param_String_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryDataNum(TCsBus, String)
    public int queryDataNum(oe.cav.bean.logic.bus.TCsBus $param_TCsBus_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryDataNum_10, new java.lang.Object[] {$param_TCsBus_1, $param_String_2}, -6129786152352957716L);
		return ((java.lang.Integer) $result).intValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 10, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsBus_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		int $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readInt();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
