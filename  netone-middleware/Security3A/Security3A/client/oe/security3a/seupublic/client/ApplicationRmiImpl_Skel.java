// Skeleton class generated by rmic, do not edit.
// Contents subject to change without notice.

package oe.security3a.seupublic.client;

public final class ApplicationRmiImpl_Skel
    implements java.rmi.server.Skeleton
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("java.lang.String create(oe.security3a.seucore.obj.db.UmsApplication)"),
	new java.rmi.server.Operation("boolean drop(java.lang.Long)"),
	new java.rmi.server.Operation("boolean drops(java.lang.Long[])"),
	new java.rmi.server.Operation("oe.security3a.seucore.obj.db.UmsApplication loadObject(java.io.Serializable)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.security3a.seucore.obj.db.UmsApplication, java.util.Map)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.security3a.seucore.obj.db.UmsApplication, java.util.Map, int, int)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.security3a.seucore.obj.db.UmsApplication, java.util.Map, int, int, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.security3a.seucore.obj.db.UmsApplication, java.util.Map, java.lang.String)"),
	new java.rmi.server.Operation("long queryObjectsNumber(oe.security3a.seucore.obj.db.UmsApplication, java.util.Map)"),
	new java.rmi.server.Operation("long queryObjectsNumber(oe.security3a.seucore.obj.db.UmsApplication, java.util.Map, java.lang.String)"),
	new java.rmi.server.Operation("boolean update(oe.security3a.seucore.obj.db.UmsApplication)"),
	new java.rmi.server.Operation("boolean updates(java.util.List)")
    };
    
    private static final long interfaceHash = -228715619929241265L;
    
    public java.rmi.server.Operation[] getOperations() {
	return (java.rmi.server.Operation[]) operations.clone();
    }
    
    public void dispatch(java.rmi.Remote obj, java.rmi.server.RemoteCall call, int opnum, long hash)
	throws java.lang.Exception
    {
	if (opnum < 0) {
	    if (hash == -6108576458695565300L) {
		opnum = 0;
	    } else if (hash == -7673394856677527606L) {
		opnum = 1;
	    } else if (hash == -9637666104002331L) {
		opnum = 2;
	    } else if (hash == -426776267883468910L) {
		opnum = 3;
	    } else if (hash == 6166143396577890571L) {
		opnum = 4;
	    } else if (hash == 8080916371258680535L) {
		opnum = 5;
	    } else if (hash == -8426392563491994229L) {
		opnum = 6;
	    } else if (hash == 1452587720380996494L) {
		opnum = 7;
	    } else if (hash == -1700657305252489745L) {
		opnum = 8;
	    } else if (hash == -5951367860506672313L) {
		opnum = 9;
	    } else if (hash == -8438579685465702009L) {
		opnum = 10;
	    } else if (hash == 477322226957015029L) {
		opnum = 11;
	    } else {
		throw new java.rmi.UnmarshalException("invalid method hash");
	    }
	} else {
	    if (hash != interfaceHash)
		throw new java.rmi.server.SkeletonMismatchException("interface hash mismatch");
	}
	
	oe.security3a.seupublic.client.ApplicationRmiImpl server = (oe.security3a.seupublic.client.ApplicationRmiImpl) obj;
	switch (opnum) {
	case 0: // create(UmsApplication)
	{
	    oe.security3a.seucore.obj.db.UmsApplication $param_UmsApplication_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsApplication_1 = (oe.security3a.seucore.obj.db.UmsApplication) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.lang.String $result = server.create($param_UmsApplication_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 1: // drop(Long)
	{
	    java.lang.Long $param_Long_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_Long_1 = (java.lang.Long) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    boolean $result = server.drop($param_Long_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeBoolean($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 2: // drops(Long[])
	{
	    java.lang.Long[] $param_arrayOf_Long_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_arrayOf_Long_1 = (java.lang.Long[]) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    boolean $result = server.drops($param_arrayOf_Long_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeBoolean($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 3: // loadObject(Serializable)
	{
	    java.io.Serializable $param_Serializable_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_Serializable_1 = (java.io.Serializable) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    oe.security3a.seucore.obj.db.UmsApplication $result = server.loadObject($param_Serializable_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 4: // queryObjects(UmsApplication, Map)
	{
	    oe.security3a.seucore.obj.db.UmsApplication $param_UmsApplication_1;
	    java.util.Map $param_Map_2;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsApplication_1 = (oe.security3a.seucore.obj.db.UmsApplication) in.readObject();
		$param_Map_2 = (java.util.Map) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.util.List $result = server.queryObjects($param_UmsApplication_1, $param_Map_2);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 5: // queryObjects(UmsApplication, Map, int, int)
	{
	    oe.security3a.seucore.obj.db.UmsApplication $param_UmsApplication_1;
	    java.util.Map $param_Map_2;
	    int $param_int_3;
	    int $param_int_4;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsApplication_1 = (oe.security3a.seucore.obj.db.UmsApplication) in.readObject();
		$param_Map_2 = (java.util.Map) in.readObject();
		$param_int_3 = in.readInt();
		$param_int_4 = in.readInt();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.util.List $result = server.queryObjects($param_UmsApplication_1, $param_Map_2, $param_int_3, $param_int_4);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 6: // queryObjects(UmsApplication, Map, int, int, String)
	{
	    oe.security3a.seucore.obj.db.UmsApplication $param_UmsApplication_1;
	    java.util.Map $param_Map_2;
	    int $param_int_3;
	    int $param_int_4;
	    java.lang.String $param_String_5;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsApplication_1 = (oe.security3a.seucore.obj.db.UmsApplication) in.readObject();
		$param_Map_2 = (java.util.Map) in.readObject();
		$param_int_3 = in.readInt();
		$param_int_4 = in.readInt();
		$param_String_5 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.util.List $result = server.queryObjects($param_UmsApplication_1, $param_Map_2, $param_int_3, $param_int_4, $param_String_5);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 7: // queryObjects(UmsApplication, Map, String)
	{
	    oe.security3a.seucore.obj.db.UmsApplication $param_UmsApplication_1;
	    java.util.Map $param_Map_2;
	    java.lang.String $param_String_3;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsApplication_1 = (oe.security3a.seucore.obj.db.UmsApplication) in.readObject();
		$param_Map_2 = (java.util.Map) in.readObject();
		$param_String_3 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    java.util.List $result = server.queryObjects($param_UmsApplication_1, $param_Map_2, $param_String_3);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeObject($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 8: // queryObjectsNumber(UmsApplication, Map)
	{
	    oe.security3a.seucore.obj.db.UmsApplication $param_UmsApplication_1;
	    java.util.Map $param_Map_2;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsApplication_1 = (oe.security3a.seucore.obj.db.UmsApplication) in.readObject();
		$param_Map_2 = (java.util.Map) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    long $result = server.queryObjectsNumber($param_UmsApplication_1, $param_Map_2);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeLong($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 9: // queryObjectsNumber(UmsApplication, Map, String)
	{
	    oe.security3a.seucore.obj.db.UmsApplication $param_UmsApplication_1;
	    java.util.Map $param_Map_2;
	    java.lang.String $param_String_3;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsApplication_1 = (oe.security3a.seucore.obj.db.UmsApplication) in.readObject();
		$param_Map_2 = (java.util.Map) in.readObject();
		$param_String_3 = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    long $result = server.queryObjectsNumber($param_UmsApplication_1, $param_Map_2, $param_String_3);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeLong($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 10: // update(UmsApplication)
	{
	    oe.security3a.seucore.obj.db.UmsApplication $param_UmsApplication_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_UmsApplication_1 = (oe.security3a.seucore.obj.db.UmsApplication) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    boolean $result = server.update($param_UmsApplication_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeBoolean($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	case 11: // updates(List)
	{
	    java.util.List $param_List_1;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$param_List_1 = (java.util.List) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
	    } finally {
		call.releaseInputStream();
	    }
	    boolean $result = server.updates($param_List_1);
	    try {
		java.io.ObjectOutput out = call.getResultStream(true);
		out.writeBoolean($result);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling return", e);
	    }
	    break;
	}
	    
	default:
	    throw new java.rmi.UnmarshalException("invalid method number");
	}
    }
}
