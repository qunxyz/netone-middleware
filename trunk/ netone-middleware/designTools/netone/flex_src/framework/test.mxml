<?xml version="1.0" encoding="utf-8"?> 
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" initialize="{valuechange()}" width="100%" height="100%" creationComplete="init()" title="选择资源"   showCloseButton="true" fontSize="18"
	 close="Exit(event)">
 <mx:Script>
 	<![CDATA[
 		import mx.events.CloseEvent;
 		import mx.core.IFlexDisplayObject;
 		import mx.managers.PopUpManager;
 		import mx.containers.TitleWindow;
 	        	import ActionForm.From.com.hitb.event.GlobalEvent;
 		        import ActionForm.From.com.hitb.component.Data;
 	        	import ActionForm.From.com.hitb.component.Data1;
 		        import ActionForm.From.com.hitb.event.Component;
 		        import ActionForm.From.com.hitb.util.GlobalManager;
 		        import mx.events.FlexEvent;
 		        import mx.collections.HierarchicalData;
         		import mx.containers.ViewStack;
         		import mx.events.ListEvent;
         	    import mx.rpc.events.ResultEvent;
         		import mx.events.DragEvent;
         		import mx.collections.XMLListCollection;
         		import mx.collections.ArrayCollection;
         		import mx.controls.Alert;
         		import mx.events.TreeEvent;
         		[Bindable]
         	    public var selectedNode:ArrayCollection;
         	    [Bindable]
         	    public var backresult:ArrayCollection;
         	    [Bindable]
                public  var rsarr:Array=null;
                [Bindable]
         	    private var vs:ViewStack;
         	     [Bindable]
              public var comarr:ArrayCollection=new ArrayCollection(); 
              
             public function treeEvent(event:ListEvent):void
         	 {   
         		     Lleft.dataProvider=null;
     		     	 var ds:String =event.itemRenderer.data.rcode;
     		         if(ds.length>=5)
     		         { 
     		     	    if(ds.substr(0,15)=="SYSROLE.SYSROLE"&&st==0)
     		     	     {
     		     	 	 fetchDataObject.expendTreeInfo(ds,0);
     		     	     }
     		     	    if(ds.substr(0,9)=="DEPT.DEPT"&&st==1)
     		     	    { 
     		     	  	fetchTreeObject.expendTreeInfo(ds,1);
     		     	    }
     		     	   
     		     	    if(ds.substring(0,9)=="DEPT.DEPT"&&st==2){
     		     	        backObject.selectTreeInDir(ds);
                        }
                       if(ds.substring(0,21)=="SYSTEMTEAM.SYSTEMTEAM"){
     		     	        backObject.selectTreeInDir(ds);
                        }
              }
     	 }
              private function backResult(event:ResultEvent):void
              { 
              	
                backresult =ArrayCollection(event.result);
              
                Lleft.dataProvider=backresult;
              }
               private function scResult(event:ResultEvent):void
              {   
              	   rsarr=ArrayCollection(event.result).toArray();
              	   
                   var root:Object=findChildren("", rsarr); 
                   var tree:Object=platToHierarchical(rsarr,root[0]); 
                   var hier:HierarchicalData=new HierarchicalData(tree); 
                    adg1.dataProvider=hier; 
              }
          [Bindable]
          public var rname:String;
          [Bindable]
          public var rcode:String;
         
            private function init():void
          {  
             
              
           }
          private function findChildren(parentId:String, source:Array , parentIdField:String="parentid"):Array
          {  
             var children:Array=new Array(); 
             for each (var item:Object in source){ 
             if (item[parentIdField]==parentId){ 
             children.push(item); 
              } 
             } 
             return children; 
            } 
       private function platToHierarchical(platData:Array, startNode:Object, childrenField:String="children",parentIdField:String="parentid"):Object
         { 
          var children:Array=findChildren(startNode.rcode, platData, parentIdField); 
          var temp:Array=new Array(); 
          for each (var item:Object in children){ 
          temp.push(platToHierarchical(platData, item, childrenField, parentIdField)); 
          }  
          startNode[childrenField]=temp; 
          return startNode; 
         } 
         public var st:int=0;
       public function valuechange():void
         {    
         	
           vs=this.parent as ViewStack;
            rname=variable.rname;
            rcode=variable.rcode;
          if(variable.rname=="" && variable.rcode==""){
           rname="组";
           rcode="SYSROLE.SYSROLE";
           }
           else{
            rname=variable.rname;
            rcode=variable.rcode;
            } 
            if(rname=="人员")
            {
            	st=1;
            }
            if(rname=="组织")
            {
            	st=2;
            }
           gettreeObject.selectTreeSource(rname,rcode);           
         }
         public function SelectTreeSourc():void{
           rname=variable.rname;
           rcode=variable.rcode;
           gettreeObject.selectTreeSource(rname,rcode); 
         }
         
     public function FDResult(event:ResultEvent):void
     {
     	   Lleft.dataProvider=event.result as ArrayCollection;
     	  
     }
     
	      private function getChild(str:String):Object{ 
	       for each(var obj:* in vs.getChildren()){ 
	           if(obj.name==str){ 
	           break; 
			} 
			} 
			return obj; 
			} 
       public function clickcanal():void
       { 
       		  PopUpManager.removePopUp(this as IFlexDisplayObject);
      }
      public function Exit(event:CloseEvent):void{
      PopUpManager.removePopUp(this as IFlexDisplayObject);
      }
       public function FTResult(event:ResultEvent):void
       {
            Lleft.dataProvider=event.result as ArrayCollection;
       }
        [Bindable]
        public var arr:ArrayCollection;
        public function clickbttok():void
       {  
       	EditPerson.bool=false;
       	variable.treearr="";
       	         var brr:ArrayCollection=Lright.dataProvider as ArrayCollection;
 			       if(brr.length>0){
 			        for(var i:int=0;i<brr.length;i++){
 			        variable.treearr+=brr.getItemAt(i).resourcename+"["+brr.getItemAt(i).resourcecode+"],";
 			        }
				 }
		  	  PopUpManager.removePopUp(this as IFlexDisplayObject);    
       }
  	]]>
 </mx:Script>
<mx:XMLList id="htsource">
    <Resourceinfo name="组"     code="SYSROLE.SYSROLE"/>
	<Resourceinfo name="人员"    code="DEPT.DEPT"/>
	<Resourceinfo name="角色"    code="SYSROLE.SYSROLE"/>
	<Resourceinfo name="流程角色" code="SYSROLE.SYSROLE"/>
	<Resourceinfo name="组织"    code="ORG.ORG"/>
	<Resourceinfo name="创建者"/>
</mx:XMLList>
     <mx:RemoteObject id="fetchTreeObject" destination="selectchirdrenform" result="FTResult(event)" 
       showBusyCursor="true"/> 
     <mx:RemoteObject id="gettreeObject" destination="selectchirdrenform" result="scResult(event)" 
       showBusyCursor="true"/>  
      <mx:RemoteObject id="backObject" destination="selectchirdrenform" result="backResult(event)" 
      showBusyCursor="true"/>
      <mx:RemoteObject id="fetchDataObject"   destination="selectchirdrenform" result="FDResult(event)" 
      showBusyCursor="true"/>
    <mx:HBox height="457" width="939" fontSize="15">
       <mx:Canvas height="454" width="290">
       <mx:Label  text="请选择树图所需资源:"/>
         <mx:AdvancedDataGrid x="0" y="32" id="adg1"  itemClick="treeEvent(event)"  designViewDataType="tree" width="280" height="100%"> 
            <mx:columns> 
                 <mx:AdvancedDataGridColumn headerText="树图资源目录" dataField="rname"/> 
            </mx:columns> 
        </mx:AdvancedDataGrid> 
	   	</mx:Canvas>
	    <mx:Canvas  width="633" height="455">
	    <mx:Label text="选中数据:" fontSize="17" x="10"/>
	       <mx:List id="Lleft" 
	      	     labelField="resourcename"
	      	     allowMultipleSelection="true"
	      		 dragEnabled="true" 
	      	     dragMoveEnabled="true"
	      	     dropEnabled="true"
	      		 width="283" height="421" x="10" y="34"/>
	      		 <mx:Label text="所需数据:" fontSize="17" x="301" id="rightList"/>
	      <mx:List id="Lright" 
	     	      labelField="resourcename"
			      allowMultipleSelection="true"
			      dragEnabled="true" 
			      dragMoveEnabled="true"
			      dropEnabled="true"
			      width="291" height="100%" x="301" y="34"/>
	   </mx:Canvas>
	  </mx:HBox>
	  <mx:Canvas  width="943">
	   <mx:Button id="bttok" label="确定" click="clickbttok()" x="745" width="87"/>
	   <mx:Button id="bttCannel" label="取消" click="clickcanal()" x="840" width="93"/>
	  </mx:Canvas>
 </mx:TitleWindow>
