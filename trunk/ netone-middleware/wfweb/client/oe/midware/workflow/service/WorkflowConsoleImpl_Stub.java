// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package oe.midware.workflow.service;

public final class WorkflowConsoleImpl_Stub
    extends java.rmi.server.RemoteStub
    implements oe.midware.workflow.service.WorkflowConsole, java.rmi.Remote
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("void commitActivity(java.lang.String)"),
	new java.rmi.server.Operation("void commitActivity(oe.midware.workflow.runtime.ormobj.TWfWorklist)"),
	new java.rmi.server.Operation("void commitActivityByManual(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("void commitActivityByManual(java.lang.String, java.lang.String[])"),
	new java.rmi.server.Operation("void commitActivityByManual(oe.midware.workflow.runtime.ormobj.TWfWorklist, java.util.List)"),
	new java.rmi.server.Operation("void commitActivityByManual(oe.midware.workflow.runtime.ormobj.TWfWorklist, oe.midware.workflow.xpdl.model.activity.Activity)"),
	new java.rmi.server.Operation("oe.midware.workflow.client.Session descriptSession(java.lang.String)"),
	new java.rmi.server.Operation("void dropProcess(java.lang.String)"),
	new java.rmi.server.Operation("void dropProcess(oe.midware.workflow.runtime.ormobj.TWfRuntime)"),
	new java.rmi.server.Operation("java.lang.String eai(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.lang.String exeScript(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.lang.Object getSessionAttribute(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("void initProcess(java.lang.String)"),
	new java.rmi.server.Operation("void initProcess(oe.midware.workflow.runtime.ormobj.TWfRuntime)"),
	new java.rmi.server.Operation("boolean judgementRule(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.lang.String newProcess(java.lang.String)"),
	new java.rmi.server.Operation("oe.midware.workflow.runtime.ormobj.TWfRuntime newProcess(oe.midware.workflow.xpdl.model.workflow.WorkflowProcess)"),
	new java.rmi.server.Operation("void removeSession(java.lang.String)"),
	new java.rmi.server.Operation("void runProcess(java.lang.String)"),
	new java.rmi.server.Operation("void runProcess(oe.midware.workflow.runtime.ormobj.TWfRuntime)"),
	new java.rmi.server.Operation("void runSubFlow(java.lang.String, java.lang.String, java.lang.String, boolean)"),
	new java.rmi.server.Operation("void setSessionAttribute(java.lang.String, java.lang.String, java.lang.Object)"),
	new java.rmi.server.Operation("void updateRelevantvar(oe.midware.workflow.runtime.ormobj.TWfRelevantvar)"),
	new java.rmi.server.Operation("void updateRelevantvarUseLog(oe.midware.workflow.runtime.ormobj.TWfRelevantvar, java.lang.String)"),
	new java.rmi.server.Operation("void updateRelevantvars(java.util.List)"),
	new java.rmi.server.Operation("void updateRelevantvarsUseLog(java.util.List, java.lang.String)"),
	new java.rmi.server.Operation("void updateWorklistStatus(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("void worklistAppBind(java.lang.String, java.lang.String, java.lang.String)")
    };
    
    private static final long interfaceHash = -7795857648943114628L;
    
    private static final long serialVersionUID = 2;
    
    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_commitActivity_0;
    private static java.lang.reflect.Method $method_commitActivity_1;
    private static java.lang.reflect.Method $method_commitActivityByManual_2;
    private static java.lang.reflect.Method $method_commitActivityByManual_3;
    private static java.lang.reflect.Method $method_commitActivityByManual_4;
    private static java.lang.reflect.Method $method_commitActivityByManual_5;
    private static java.lang.reflect.Method $method_descriptSession_6;
    private static java.lang.reflect.Method $method_dropProcess_7;
    private static java.lang.reflect.Method $method_dropProcess_8;
    private static java.lang.reflect.Method $method_eai_9;
    private static java.lang.reflect.Method $method_exeScript_10;
    private static java.lang.reflect.Method $method_getSessionAttribute_11;
    private static java.lang.reflect.Method $method_initProcess_12;
    private static java.lang.reflect.Method $method_initProcess_13;
    private static java.lang.reflect.Method $method_judgementRule_14;
    private static java.lang.reflect.Method $method_newProcess_15;
    private static java.lang.reflect.Method $method_newProcess_16;
    private static java.lang.reflect.Method $method_removeSession_17;
    private static java.lang.reflect.Method $method_runProcess_18;
    private static java.lang.reflect.Method $method_runProcess_19;
    private static java.lang.reflect.Method $method_runSubFlow_20;
    private static java.lang.reflect.Method $method_setSessionAttribute_21;
    private static java.lang.reflect.Method $method_updateRelevantvar_22;
    private static java.lang.reflect.Method $method_updateRelevantvarUseLog_23;
    private static java.lang.reflect.Method $method_updateRelevantvars_24;
    private static java.lang.reflect.Method $method_updateRelevantvarsUseLog_25;
    private static java.lang.reflect.Method $method_updateWorklistStatus_26;
    private static java.lang.reflect.Method $method_worklistAppBind_27;
    
    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		new java.lang.Class[] {
		    java.rmi.Remote.class,
		    java.lang.reflect.Method.class,
		    java.lang.Object[].class,
		    long.class
		});
	    useNewInvoke = true;
	    $method_commitActivity_0 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("commitActivity", new java.lang.Class[] {java.lang.String.class});
	    $method_commitActivity_1 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("commitActivity", new java.lang.Class[] {oe.midware.workflow.runtime.ormobj.TWfWorklist.class});
	    $method_commitActivityByManual_2 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("commitActivityByManual", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_commitActivityByManual_3 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("commitActivityByManual", new java.lang.Class[] {java.lang.String.class, java.lang.String[].class});
	    $method_commitActivityByManual_4 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("commitActivityByManual", new java.lang.Class[] {oe.midware.workflow.runtime.ormobj.TWfWorklist.class, java.util.List.class});
	    $method_commitActivityByManual_5 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("commitActivityByManual", new java.lang.Class[] {oe.midware.workflow.runtime.ormobj.TWfWorklist.class, oe.midware.workflow.xpdl.model.activity.Activity.class});
	    $method_descriptSession_6 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("descriptSession", new java.lang.Class[] {java.lang.String.class});
	    $method_dropProcess_7 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("dropProcess", new java.lang.Class[] {java.lang.String.class});
	    $method_dropProcess_8 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("dropProcess", new java.lang.Class[] {oe.midware.workflow.runtime.ormobj.TWfRuntime.class});
	    $method_eai_9 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("eai", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_exeScript_10 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("exeScript", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_getSessionAttribute_11 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("getSessionAttribute", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_initProcess_12 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("initProcess", new java.lang.Class[] {java.lang.String.class});
	    $method_initProcess_13 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("initProcess", new java.lang.Class[] {oe.midware.workflow.runtime.ormobj.TWfRuntime.class});
	    $method_judgementRule_14 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("judgementRule", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_newProcess_15 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("newProcess", new java.lang.Class[] {java.lang.String.class});
	    $method_newProcess_16 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("newProcess", new java.lang.Class[] {oe.midware.workflow.xpdl.model.workflow.WorkflowProcess.class});
	    $method_removeSession_17 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("removeSession", new java.lang.Class[] {java.lang.String.class});
	    $method_runProcess_18 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("runProcess", new java.lang.Class[] {java.lang.String.class});
	    $method_runProcess_19 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("runProcess", new java.lang.Class[] {oe.midware.workflow.runtime.ormobj.TWfRuntime.class});
	    $method_runSubFlow_20 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("runSubFlow", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, boolean.class});
	    $method_setSessionAttribute_21 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("setSessionAttribute", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.Object.class});
	    $method_updateRelevantvar_22 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("updateRelevantvar", new java.lang.Class[] {oe.midware.workflow.runtime.ormobj.TWfRelevantvar.class});
	    $method_updateRelevantvarUseLog_23 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("updateRelevantvarUseLog", new java.lang.Class[] {oe.midware.workflow.runtime.ormobj.TWfRelevantvar.class, java.lang.String.class});
	    $method_updateRelevantvars_24 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("updateRelevantvars", new java.lang.Class[] {java.util.List.class});
	    $method_updateRelevantvarsUseLog_25 = oe.frame.bus.workflow.ProcessEngine.class.getMethod("updateRelevantvarsUseLog", new java.lang.Class[] {java.util.List.class, java.lang.String.class});
	    $method_updateWorklistStatus_26 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("updateWorklistStatus", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_worklistAppBind_27 = oe.midware.workflow.service.WorkflowConsole.class.getMethod("worklistAppBind", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }
    
    // constructors
    public WorkflowConsoleImpl_Stub() {
	super();
    }
    public WorkflowConsoleImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of commitActivity(String)
    public void commitActivity(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_commitActivity_0, new java.lang.Object[] {$param_String_1}, 8131871667129750397L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of commitActivity(TWfWorklist)
    public void commitActivity(oe.midware.workflow.runtime.ormobj.TWfWorklist $param_TWfWorklist_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_commitActivity_1, new java.lang.Object[] {$param_TWfWorklist_1}, -4655325127478918818L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TWfWorklist_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of commitActivityByManual(String, String)
    public void commitActivityByManual(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_commitActivityByManual_2, new java.lang.Object[] {$param_String_1, $param_String_2}, -4991940486981281178L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of commitActivityByManual(String, String[])
    public void commitActivityByManual(java.lang.String $param_String_1, java.lang.String[] $param_arrayOf_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_commitActivityByManual_3, new java.lang.Object[] {$param_String_1, $param_arrayOf_String_2}, 7703441546300855480L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 3, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_arrayOf_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of commitActivityByManual(TWfWorklist, List)
    public void commitActivityByManual(oe.midware.workflow.runtime.ormobj.TWfWorklist $param_TWfWorklist_1, java.util.List $param_List_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_commitActivityByManual_4, new java.lang.Object[] {$param_TWfWorklist_1, $param_List_2}, -7107939466257947561L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 4, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TWfWorklist_1);
		    out.writeObject($param_List_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of commitActivityByManual(TWfWorklist, Activity)
    public void commitActivityByManual(oe.midware.workflow.runtime.ormobj.TWfWorklist $param_TWfWorklist_1, oe.midware.workflow.xpdl.model.activity.Activity $param_Activity_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_commitActivityByManual_5, new java.lang.Object[] {$param_TWfWorklist_1, $param_Activity_2}, -9170728608506728403L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 5, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TWfWorklist_1);
		    out.writeObject($param_Activity_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of descriptSession(String)
    public oe.midware.workflow.client.Session descriptSession(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_descriptSession_6, new java.lang.Object[] {$param_String_1}, -5491911163107160312L);
		return ((oe.midware.workflow.client.Session) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 6, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.midware.workflow.client.Session $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.midware.workflow.client.Session) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropProcess(String)
    public void dropProcess(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_dropProcess_7, new java.lang.Object[] {$param_String_1}, 2731747658853194775L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 7, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropProcess(TWfRuntime)
    public void dropProcess(oe.midware.workflow.runtime.ormobj.TWfRuntime $param_TWfRuntime_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_dropProcess_8, new java.lang.Object[] {$param_TWfRuntime_1}, 338460575635350289L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 8, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TWfRuntime_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of eai(String, String, String)
    public java.lang.String eai(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_eai_9, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 8477265974883240214L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 9, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of exeScript(String, String)
    public java.lang.String exeScript(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_exeScript_10, new java.lang.Object[] {$param_String_1, $param_String_2}, -5036647559184159196L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 10, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getSessionAttribute(String, String)
    public java.lang.Object getSessionAttribute(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_getSessionAttribute_11, new java.lang.Object[] {$param_String_1, $param_String_2}, -3785827562705672380L);
		return ((java.lang.Object) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 11, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.Object $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.Object) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of initProcess(String)
    public void initProcess(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_initProcess_12, new java.lang.Object[] {$param_String_1}, -1270135615889412677L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 12, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of initProcess(TWfRuntime)
    public void initProcess(oe.midware.workflow.runtime.ormobj.TWfRuntime $param_TWfRuntime_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_initProcess_13, new java.lang.Object[] {$param_TWfRuntime_1}, -8392997652454200060L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 13, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TWfRuntime_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of judgementRule(String, String)
    public boolean judgementRule(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_judgementRule_14, new java.lang.Object[] {$param_String_1, $param_String_2}, -8351566676947975781L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 14, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of newProcess(String)
    public java.lang.String newProcess(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_newProcess_15, new java.lang.Object[] {$param_String_1}, -6173435621847002805L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 15, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of newProcess(WorkflowProcess)
    public oe.midware.workflow.runtime.ormobj.TWfRuntime newProcess(oe.midware.workflow.xpdl.model.workflow.WorkflowProcess $param_WorkflowProcess_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_newProcess_16, new java.lang.Object[] {$param_WorkflowProcess_1}, -5081520500251258056L);
		return ((oe.midware.workflow.runtime.ormobj.TWfRuntime) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 16, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_WorkflowProcess_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.midware.workflow.runtime.ormobj.TWfRuntime $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.midware.workflow.runtime.ormobj.TWfRuntime) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of removeSession(String)
    public void removeSession(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_removeSession_17, new java.lang.Object[] {$param_String_1}, 528665140188616162L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 17, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of runProcess(String)
    public void runProcess(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_runProcess_18, new java.lang.Object[] {$param_String_1}, 366577428389685808L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 18, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of runProcess(TWfRuntime)
    public void runProcess(oe.midware.workflow.runtime.ormobj.TWfRuntime $param_TWfRuntime_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_runProcess_19, new java.lang.Object[] {$param_TWfRuntime_1}, -7436835289920928677L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 19, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TWfRuntime_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of runSubFlow(String, String, String, boolean)
    public void runSubFlow(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, boolean $param_boolean_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_runSubFlow_20, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, new java.lang.Boolean($param_boolean_4)}, -6005999721338886019L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 20, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		    out.writeBoolean($param_boolean_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setSessionAttribute(String, String, Object)
    public void setSessionAttribute(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.Object $param_Object_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_setSessionAttribute_21, new java.lang.Object[] {$param_String_1, $param_String_2, $param_Object_3}, 7988202451820941519L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 21, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_Object_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateRelevantvar(TWfRelevantvar)
    public void updateRelevantvar(oe.midware.workflow.runtime.ormobj.TWfRelevantvar $param_TWfRelevantvar_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_updateRelevantvar_22, new java.lang.Object[] {$param_TWfRelevantvar_1}, -2157974926385165766L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 22, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TWfRelevantvar_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateRelevantvarUseLog(TWfRelevantvar, String)
    public void updateRelevantvarUseLog(oe.midware.workflow.runtime.ormobj.TWfRelevantvar $param_TWfRelevantvar_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_updateRelevantvarUseLog_23, new java.lang.Object[] {$param_TWfRelevantvar_1, $param_String_2}, 3994445439569230953L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 23, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TWfRelevantvar_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateRelevantvars(List)
    public void updateRelevantvars(java.util.List $param_List_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_updateRelevantvars_24, new java.lang.Object[] {$param_List_1}, -3338036758033165813L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 24, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_List_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateRelevantvarsUseLog(List, String)
    public void updateRelevantvarsUseLog(java.util.List $param_List_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_updateRelevantvarsUseLog_25, new java.lang.Object[] {$param_List_1, $param_String_2}, 7762712804801303245L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 25, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_List_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateWorklistStatus(String, String)
    public void updateWorklistStatus(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_updateWorklistStatus_26, new java.lang.Object[] {$param_String_1, $param_String_2}, -3429931525425157791L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 26, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of worklistAppBind(String, String, String)
    public void worklistAppBind(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_worklistAppBind_27, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 1535355903727829402L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 27, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
