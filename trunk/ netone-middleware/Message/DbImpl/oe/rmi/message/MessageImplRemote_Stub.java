// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package oe.rmi.message;

public final class MessageImplRemote_Stub
    extends java.rmi.server.RemoteStub
    implements oe.rmi.message.MessageHandle, java.rmi.Remote
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("void deleteMessage(java.lang.String)"),
	new java.rmi.server.Operation("void deleteMessage(java.lang.String[])"),
	new java.rmi.server.Operation("oe.rmi.message.UmsBussformworklist load(java.lang.String)"),
	new java.rmi.server.Operation("java.util.List personMessage(java.lang.String, int, int, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List query(oe.rmi.message.UmsBussformworklist, int, int, java.lang.String)"),
	new java.rmi.server.Operation("java.io.Serializable send(java.util.List)[]"),
	new java.rmi.server.Operation("java.io.Serializable send(oe.rmi.message.UmsBussformworklist)"),
	new java.rmi.server.Operation("void setEmail(java.lang.String)"),
	new java.rmi.server.Operation("void setPassword(java.lang.String)"),
	new java.rmi.server.Operation("int totalNum(java.lang.String, java.lang.String)")
    };
    
    private static final long interfaceHash = -482226069528446716L;
    
    private static final long serialVersionUID = 2;
    
    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_deleteMessage_0;
    private static java.lang.reflect.Method $method_deleteMessage_1;
    private static java.lang.reflect.Method $method_load_2;
    private static java.lang.reflect.Method $method_personMessage_3;
    private static java.lang.reflect.Method $method_query_4;
    private static java.lang.reflect.Method $method_send_5;
    private static java.lang.reflect.Method $method_send_6;
    private static java.lang.reflect.Method $method_setEmail_7;
    private static java.lang.reflect.Method $method_setPassword_8;
    private static java.lang.reflect.Method $method_totalNum_9;
    
    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		new java.lang.Class[] {
		    java.rmi.Remote.class,
		    java.lang.reflect.Method.class,
		    java.lang.Object[].class,
		    long.class
		});
	    useNewInvoke = true;
	    $method_deleteMessage_0 = oe.rmi.message.MessageHandle.class.getMethod("deleteMessage", new java.lang.Class[] {java.lang.String.class});
	    $method_deleteMessage_1 = oe.rmi.message.MessageHandle.class.getMethod("deleteMessage", new java.lang.Class[] {java.lang.String[].class});
	    $method_load_2 = oe.rmi.message.MessageHandle.class.getMethod("load", new java.lang.Class[] {java.lang.String.class});
	    $method_personMessage_3 = oe.rmi.message.MessageHandle.class.getMethod("personMessage", new java.lang.Class[] {java.lang.String.class, int.class, int.class, java.lang.String.class});
	    $method_query_4 = oe.rmi.message.MessageHandle.class.getMethod("query", new java.lang.Class[] {oe.rmi.message.UmsBussformworklist.class, int.class, int.class, java.lang.String.class});
	    $method_send_5 = oe.rmi.message.MessageHandle.class.getMethod("send", new java.lang.Class[] {java.util.List.class});
	    $method_send_6 = oe.rmi.message.MessageHandle.class.getMethod("send", new java.lang.Class[] {oe.rmi.message.UmsBussformworklist.class});
	    $method_setEmail_7 = oe.rmi.message.MessageHandle.class.getMethod("setEmail", new java.lang.Class[] {java.lang.String.class});
	    $method_setPassword_8 = oe.rmi.message.MessageHandle.class.getMethod("setPassword", new java.lang.Class[] {java.lang.String.class});
	    $method_totalNum_9 = oe.rmi.message.MessageHandle.class.getMethod("totalNum", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }
    
    // constructors
    public MessageImplRemote_Stub() {
	super();
    }
    public MessageImplRemote_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of deleteMessage(String)
    public void deleteMessage(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_deleteMessage_0, new java.lang.Object[] {$param_String_1}, 8126804961426121883L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of deleteMessage(String[])
    public void deleteMessage(java.lang.String[] $param_arrayOf_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_deleteMessage_1, new java.lang.Object[] {$param_arrayOf_String_1}, 8211952498414971988L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_arrayOf_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of load(String)
    public oe.rmi.message.UmsBussformworklist load(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_load_2, new java.lang.Object[] {$param_String_1}, 3298600082394219535L);
		return ((oe.rmi.message.UmsBussformworklist) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.rmi.message.UmsBussformworklist $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.rmi.message.UmsBussformworklist) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of personMessage(String, int, int, String)
    public java.util.List personMessage(java.lang.String $param_String_1, int $param_int_2, int $param_int_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_personMessage_3, new java.lang.Object[] {$param_String_1, new java.lang.Integer($param_int_2), new java.lang.Integer($param_int_3), $param_String_4}, 7944386774538378821L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 3, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeInt($param_int_2);
		    out.writeInt($param_int_3);
		    out.writeObject($param_String_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of query(UmsBussformworklist, int, int, String)
    public java.util.List query(oe.rmi.message.UmsBussformworklist $param_UmsBussformworklist_1, int $param_int_2, int $param_int_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_query_4, new java.lang.Object[] {$param_UmsBussformworklist_1, new java.lang.Integer($param_int_2), new java.lang.Integer($param_int_3), $param_String_4}, -646501449162973294L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 4, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsBussformworklist_1);
		    out.writeInt($param_int_2);
		    out.writeInt($param_int_3);
		    out.writeObject($param_String_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of send(List)
    public java.io.Serializable[] send(java.util.List $param_List_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_send_5, new java.lang.Object[] {$param_List_1}, -3767222925184678157L);
		return ((java.io.Serializable[]) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 5, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_List_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.io.Serializable[] $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.io.Serializable[]) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of send(UmsBussformworklist)
    public java.io.Serializable send(oe.rmi.message.UmsBussformworklist $param_UmsBussformworklist_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_send_6, new java.lang.Object[] {$param_UmsBussformworklist_1}, -7208823029971187292L);
		return ((java.io.Serializable) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 6, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsBussformworklist_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.io.Serializable $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.io.Serializable) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setEmail(String)
    public void setEmail(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_setEmail_7, new java.lang.Object[] {$param_String_1}, -4117224176847888539L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 7, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setPassword(String)
    public void setPassword(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_setPassword_8, new java.lang.Object[] {$param_String_1}, -2859963922075875313L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 8, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of totalNum(String, String)
    public int totalNum(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_totalNum_9, new java.lang.Object[] {$param_String_1, $param_String_2}, -356576425643246426L);
		return ((java.lang.Integer) $result).intValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 9, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		int $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readInt();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
