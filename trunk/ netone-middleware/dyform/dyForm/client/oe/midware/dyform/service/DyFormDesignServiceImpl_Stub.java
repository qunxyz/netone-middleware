// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package oe.midware.dyform.service;

public final class DyFormDesignServiceImpl_Stub
    extends java.rmi.server.RemoteStub
    implements oe.midware.dyform.service.DyFormDesignService, java.rmi.Remote
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("java.lang.String addColumn(oe.cav.bean.logic.column.TCsColumn)"),
	new java.rmi.server.Operation("java.lang.String create(oe.cav.bean.logic.form.TCsForm, java.lang.String)[]"),
	new java.rmi.server.Operation("java.lang.String dropColumn(oe.cav.bean.logic.column.TCsColumn)"),
	new java.rmi.server.Operation("boolean dropForm(oe.cav.bean.logic.form.TCsForm)"),
	new java.rmi.server.Operation("java.lang.String formDescription(java.lang.String)"),
	new java.rmi.server.Operation("oe.cav.bean.logic.tools.DyObj fromDy(java.lang.String)"),
	new java.rmi.server.Operation("java.lang.String fromDyObj(oe.cav.bean.logic.tools.DyObj)"),
	new java.rmi.server.Operation("oe.cav.bean.logic.tools.DyObj fromSQL(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.lang.String getNextColumn(java.lang.String)"),
	new java.rmi.server.Operation("long getNextIndexValue(java.lang.String)"),
	new java.rmi.server.Operation("java.util.List listDyObjFromLevel(java.lang.String)"),
	new java.rmi.server.Operation("oe.cav.bean.logic.column.TCsColumn loadColumn(java.lang.String, java.io.Serializable)"),
	new java.rmi.server.Operation("boolean movedownColumn(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean moveupColumn(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.lang.String parseViewType(java.lang.String)[]"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.cav.bean.logic.column.TCsColumn)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.cav.bean.logic.column.TCsColumn, int, int)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.cav.bean.logic.column.TCsColumn, int, int, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.cav.bean.logic.column.TCsColumn, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.cav.bean.logic.form.TCsForm)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.cav.bean.logic.form.TCsForm, int, int)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.cav.bean.logic.form.TCsForm, int, int, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List queryObjects(oe.cav.bean.logic.form.TCsForm, java.lang.String)"),
	new java.rmi.server.Operation("long queryObjectsNumber(oe.cav.bean.logic.column.TCsColumn)"),
	new java.rmi.server.Operation("long queryObjectsNumber(oe.cav.bean.logic.column.TCsColumn, java.lang.String)"),
	new java.rmi.server.Operation("long queryObjectsNumber(oe.cav.bean.logic.form.TCsForm)"),
	new java.rmi.server.Operation("long queryObjectsNumber(oe.cav.bean.logic.form.TCsForm, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List queryObjectsUrl(java.lang.String)"),
	new java.rmi.server.Operation("boolean resizeColumnIndexValue(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.lang.String updateColumn(oe.cav.bean.logic.column.TCsColumn)"),
	new java.rmi.server.Operation("java.lang.String updateColumnView(oe.cav.bean.logic.column.TCsColumn)"),
	new java.rmi.server.Operation("boolean updateForm(oe.cav.bean.logic.form.TCsForm)")
    };
    
    private static final long interfaceHash = -7002038514782190261L;
    
    private static final long serialVersionUID = 2;
    
    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_addColumn_0;
    private static java.lang.reflect.Method $method_create_1;
    private static java.lang.reflect.Method $method_dropColumn_2;
    private static java.lang.reflect.Method $method_dropForm_3;
    private static java.lang.reflect.Method $method_formDescription_4;
    private static java.lang.reflect.Method $method_fromDy_5;
    private static java.lang.reflect.Method $method_fromDyObj_6;
    private static java.lang.reflect.Method $method_fromSQL_7;
    private static java.lang.reflect.Method $method_getNextColumn_8;
    private static java.lang.reflect.Method $method_getNextIndexValue_9;
    private static java.lang.reflect.Method $method_listDyObjFromLevel_10;
    private static java.lang.reflect.Method $method_loadColumn_11;
    private static java.lang.reflect.Method $method_movedownColumn_12;
    private static java.lang.reflect.Method $method_moveupColumn_13;
    private static java.lang.reflect.Method $method_parseViewType_14;
    private static java.lang.reflect.Method $method_queryObjects_15;
    private static java.lang.reflect.Method $method_queryObjects_16;
    private static java.lang.reflect.Method $method_queryObjects_17;
    private static java.lang.reflect.Method $method_queryObjects_18;
    private static java.lang.reflect.Method $method_queryObjects_19;
    private static java.lang.reflect.Method $method_queryObjects_20;
    private static java.lang.reflect.Method $method_queryObjects_21;
    private static java.lang.reflect.Method $method_queryObjects_22;
    private static java.lang.reflect.Method $method_queryObjectsNumber_23;
    private static java.lang.reflect.Method $method_queryObjectsNumber_24;
    private static java.lang.reflect.Method $method_queryObjectsNumber_25;
    private static java.lang.reflect.Method $method_queryObjectsNumber_26;
    private static java.lang.reflect.Method $method_queryObjectsUrl_27;
    private static java.lang.reflect.Method $method_resizeColumnIndexValue_28;
    private static java.lang.reflect.Method $method_updateColumn_29;
    private static java.lang.reflect.Method $method_updateColumnView_30;
    private static java.lang.reflect.Method $method_updateForm_31;
    
    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		new java.lang.Class[] {
		    java.rmi.Remote.class,
		    java.lang.reflect.Method.class,
		    java.lang.Object[].class,
		    long.class
		});
	    useNewInvoke = true;
	    $method_addColumn_0 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("addColumn", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class});
	    $method_create_1 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("create", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class, java.lang.String.class});
	    $method_dropColumn_2 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("dropColumn", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class});
	    $method_dropForm_3 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("dropForm", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class});
	    $method_formDescription_4 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("formDescription", new java.lang.Class[] {java.lang.String.class});
	    $method_fromDy_5 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("fromDy", new java.lang.Class[] {java.lang.String.class});
	    $method_fromDyObj_6 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("fromDyObj", new java.lang.Class[] {oe.cav.bean.logic.tools.DyObj.class});
	    $method_fromSQL_7 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("fromSQL", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_getNextColumn_8 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("getNextColumn", new java.lang.Class[] {java.lang.String.class});
	    $method_getNextIndexValue_9 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("getNextIndexValue", new java.lang.Class[] {java.lang.String.class});
	    $method_listDyObjFromLevel_10 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("listDyObjFromLevel", new java.lang.Class[] {java.lang.String.class});
	    $method_loadColumn_11 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("loadColumn", new java.lang.Class[] {java.lang.String.class, java.io.Serializable.class});
	    $method_movedownColumn_12 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("movedownColumn", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_moveupColumn_13 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("moveupColumn", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_parseViewType_14 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("parseViewType", new java.lang.Class[] {java.lang.String.class});
	    $method_queryObjects_15 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjects", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class});
	    $method_queryObjects_16 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjects", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class, int.class, int.class});
	    $method_queryObjects_17 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjects", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class, int.class, int.class, java.lang.String.class});
	    $method_queryObjects_18 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjects", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class, java.lang.String.class});
	    $method_queryObjects_19 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjects", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class});
	    $method_queryObjects_20 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjects", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class, int.class, int.class});
	    $method_queryObjects_21 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjects", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class, int.class, int.class, java.lang.String.class});
	    $method_queryObjects_22 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjects", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class, java.lang.String.class});
	    $method_queryObjectsNumber_23 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjectsNumber", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class});
	    $method_queryObjectsNumber_24 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjectsNumber", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class, java.lang.String.class});
	    $method_queryObjectsNumber_25 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjectsNumber", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class});
	    $method_queryObjectsNumber_26 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjectsNumber", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class, java.lang.String.class});
	    $method_queryObjectsUrl_27 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("queryObjectsUrl", new java.lang.Class[] {java.lang.String.class});
	    $method_resizeColumnIndexValue_28 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("resizeColumnIndexValue", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_updateColumn_29 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("updateColumn", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class});
	    $method_updateColumnView_30 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("updateColumnView", new java.lang.Class[] {oe.cav.bean.logic.column.TCsColumn.class});
	    $method_updateForm_31 = oe.midware.dyform.service.DyFormDesignService.class.getMethod("updateForm", new java.lang.Class[] {oe.cav.bean.logic.form.TCsForm.class});
	} catch (java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }
    
    // constructors
    public DyFormDesignServiceImpl_Stub() {
	super();
    }
    public DyFormDesignServiceImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addColumn(TCsColumn)
    public java.lang.String addColumn(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_addColumn_0, new java.lang.Object[] {$param_TCsColumn_1}, 2634447396021360586L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of create(TCsForm, String)
    public java.lang.String[] create(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_create_1, new java.lang.Object[] {$param_TCsForm_1, $param_String_2}, 1556187260694175781L);
		return ((java.lang.String[]) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String[] $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String[]) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropColumn(TCsColumn)
    public java.lang.String dropColumn(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_dropColumn_2, new java.lang.Object[] {$param_TCsColumn_1}, 7402733203527835865L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropForm(TCsForm)
    public boolean dropForm(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_dropForm_3, new java.lang.Object[] {$param_TCsForm_1}, -4373006195158114182L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 3, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of formDescription(String)
    public java.lang.String formDescription(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_formDescription_4, new java.lang.Object[] {$param_String_1}, 2481426259236268859L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 4, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fromDy(String)
    public oe.cav.bean.logic.tools.DyObj fromDy(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fromDy_5, new java.lang.Object[] {$param_String_1}, -1581258887312153277L);
		return ((oe.cav.bean.logic.tools.DyObj) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 5, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.cav.bean.logic.tools.DyObj $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.cav.bean.logic.tools.DyObj) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fromDyObj(DyObj)
    public java.lang.String fromDyObj(oe.cav.bean.logic.tools.DyObj $param_DyObj_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fromDyObj_6, new java.lang.Object[] {$param_DyObj_1}, 6117677232398371592L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 6, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_DyObj_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fromSQL(String, String)
    public oe.cav.bean.logic.tools.DyObj fromSQL(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fromSQL_7, new java.lang.Object[] {$param_String_1, $param_String_2}, 3531348311875074841L);
		return ((oe.cav.bean.logic.tools.DyObj) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 7, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.cav.bean.logic.tools.DyObj $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.cav.bean.logic.tools.DyObj) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getNextColumn(String)
    public java.lang.String getNextColumn(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_getNextColumn_8, new java.lang.Object[] {$param_String_1}, -3640816603369953488L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 8, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getNextIndexValue(String)
    public long getNextIndexValue(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_getNextIndexValue_9, new java.lang.Object[] {$param_String_1}, -3784025994445985539L);
		return ((java.lang.Long) $result).longValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 9, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		long $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readLong();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of listDyObjFromLevel(String)
    public java.util.List listDyObjFromLevel(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_listDyObjFromLevel_10, new java.lang.Object[] {$param_String_1}, 7176163625422039430L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 10, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of loadColumn(String, Serializable)
    public oe.cav.bean.logic.column.TCsColumn loadColumn(java.lang.String $param_String_1, java.io.Serializable $param_Serializable_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_loadColumn_11, new java.lang.Object[] {$param_String_1, $param_Serializable_2}, 999736544780109577L);
		return ((oe.cav.bean.logic.column.TCsColumn) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 11, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Serializable_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.cav.bean.logic.column.TCsColumn $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.cav.bean.logic.column.TCsColumn) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of movedownColumn(String, String, String)
    public boolean movedownColumn(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_movedownColumn_12, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 354564514460112861L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 12, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moveupColumn(String, String, String)
    public boolean moveupColumn(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_moveupColumn_13, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 5735718690013150883L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 13, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of parseViewType(String)
    public java.lang.String[] parseViewType(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_parseViewType_14, new java.lang.Object[] {$param_String_1}, 8445271422392880129L);
		return ((java.lang.String[]) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 14, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String[] $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String[]) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjects(TCsColumn)
    public java.util.List queryObjects(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjects_15, new java.lang.Object[] {$param_TCsColumn_1}, -757869916437176698L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 15, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjects(TCsColumn, int, int)
    public java.util.List queryObjects(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1, int $param_int_2, int $param_int_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjects_16, new java.lang.Object[] {$param_TCsColumn_1, new java.lang.Integer($param_int_2), new java.lang.Integer($param_int_3)}, 3589302673131975491L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 16, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		    out.writeInt($param_int_2);
		    out.writeInt($param_int_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjects(TCsColumn, int, int, String)
    public java.util.List queryObjects(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1, int $param_int_2, int $param_int_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjects_17, new java.lang.Object[] {$param_TCsColumn_1, new java.lang.Integer($param_int_2), new java.lang.Integer($param_int_3), $param_String_4}, -6471450459186451731L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 17, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		    out.writeInt($param_int_2);
		    out.writeInt($param_int_3);
		    out.writeObject($param_String_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjects(TCsColumn, String)
    public java.util.List queryObjects(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjects_18, new java.lang.Object[] {$param_TCsColumn_1, $param_String_2}, 1901854186563156954L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 18, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjects(TCsForm)
    public java.util.List queryObjects(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjects_19, new java.lang.Object[] {$param_TCsForm_1}, -4949895506325029151L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 19, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjects(TCsForm, int, int)
    public java.util.List queryObjects(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1, int $param_int_2, int $param_int_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjects_20, new java.lang.Object[] {$param_TCsForm_1, new java.lang.Integer($param_int_2), new java.lang.Integer($param_int_3)}, -7057197919500946191L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 20, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		    out.writeInt($param_int_2);
		    out.writeInt($param_int_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjects(TCsForm, int, int, String)
    public java.util.List queryObjects(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1, int $param_int_2, int $param_int_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjects_21, new java.lang.Object[] {$param_TCsForm_1, new java.lang.Integer($param_int_2), new java.lang.Integer($param_int_3), $param_String_4}, 1010033046315739291L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 21, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		    out.writeInt($param_int_2);
		    out.writeInt($param_int_3);
		    out.writeObject($param_String_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjects(TCsForm, String)
    public java.util.List queryObjects(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjects_22, new java.lang.Object[] {$param_TCsForm_1, $param_String_2}, -345158052365926477L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 22, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsNumber(TCsColumn)
    public long queryObjectsNumber(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsNumber_23, new java.lang.Object[] {$param_TCsColumn_1}, -5313284381005627202L);
		return ((java.lang.Long) $result).longValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 23, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		long $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readLong();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsNumber(TCsColumn, String)
    public long queryObjectsNumber(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsNumber_24, new java.lang.Object[] {$param_TCsColumn_1, $param_String_2}, 3419453087047444736L);
		return ((java.lang.Long) $result).longValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 24, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		long $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readLong();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsNumber(TCsForm)
    public long queryObjectsNumber(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsNumber_25, new java.lang.Object[] {$param_TCsForm_1}, 1640563444064992589L);
		return ((java.lang.Long) $result).longValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 25, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		long $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readLong();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsNumber(TCsForm, String)
    public long queryObjectsNumber(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsNumber_26, new java.lang.Object[] {$param_TCsForm_1, $param_String_2}, -5011899816666930625L);
		return ((java.lang.Long) $result).longValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 26, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		long $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readLong();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsUrl(String)
    public java.util.List queryObjectsUrl(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsUrl_27, new java.lang.Object[] {$param_String_1}, 779508253068444054L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 27, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of resizeColumnIndexValue(String, String)
    public boolean resizeColumnIndexValue(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_resizeColumnIndexValue_28, new java.lang.Object[] {$param_String_1, $param_String_2}, -7836113802061637813L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 28, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateColumn(TCsColumn)
    public java.lang.String updateColumn(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_updateColumn_29, new java.lang.Object[] {$param_TCsColumn_1}, -8711145843332917081L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 29, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateColumnView(TCsColumn)
    public java.lang.String updateColumnView(oe.cav.bean.logic.column.TCsColumn $param_TCsColumn_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_updateColumnView_30, new java.lang.Object[] {$param_TCsColumn_1}, 3064710673927008252L);
		return ((java.lang.String) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 30, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsColumn_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateForm(TCsForm)
    public boolean updateForm(oe.cav.bean.logic.form.TCsForm $param_TCsForm_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_updateForm_31, new java.lang.Object[] {$param_TCsForm_1}, -8664334215240035492L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 31, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_TCsForm_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
