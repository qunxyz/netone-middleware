1, 整合动态表单
2, 整合消息
3, 并入Portal的管理中去
4, 注册逻辑 将 流程注册入 资源管理在 FSaveAction 中添加代码实现--OK
5, 相关数据的 定义有BUG, 在未保存流程之前可以添加相关数据,但是一旦保存了流程后,就再也无法编辑相关数据 ---OK 原因是之前的WebStruts中的IO操作有问题,以后准备清除WebStruts中的IO操作
6, 工作流有必要简化WEB,把流程属性,流程文件管理,都重新实现,应用资源
7, 流程访问控制,注册入资源的应用
8, 调试中 启动和初始化有问题--OK
9, 流程与表单的合并
9, 将 T_cs_processfile表删除了,同时 XpdlModelHandlerImp 重新实现修订了 ---OK
10 在portal中提交流程好象有问题,特别是 节点->子流程->节点


需要自动注册安全,在流程的下一级自动创建节点

t_wf_worklist中增加一个字段extendattribute 用于存储表单或者程序的id

流程是被资源所管理的,流程可以在资源的任意一个位置,流程不是目录,但是流程可以有子节点，这些子节点
就是流程的节点

Soa应用的例子
1: 手工SOA, 启动流程,激活第一个节点, 该节点绑定一个表单,用户可以提交表单来走完流程
2: 自动SOA, 将所有的节点都绑定在自动活动bean上,启动后,流程自动执行到结束
3: 手工和自动混合 soa

工作流中view RMi中增加一个 功能, 用于解析soa描述文件用的 ActiveBind soaparser(string soa)

SOA服务配置要修改,支持异步还是同步

工作流中的大量节点已经没什么用途了,只要一个节点就可以了,通过集成外部服务来实现应用

工作流中子流程的应用模式做了大变动,子流程变成类似soa的应用集成 与 bean 和 dyform 是雷同的做法

流程中的soa的bean配置 的集成有问题, 如果选择参数选择in 那么要使用 outObject的参数 --OK
原先的业务有问题的,修改页面和创建页面应该是合并于一体的, B和C 按纽是可以合并的,
点已经创建过的关系时, 不会显示脚本, 点的时候应该可以直接修改
确定按纽 可以去掉, 用 增加和修改和删除

流程启动的时候,不要显示轨迹,只需要提示启动成功即可,因为流程在启动中可能存在多线程的应用,这样原先
的直接打开轨迹查看的结果可能不正确

流程的SOA处理不要用RMI了,用本地方法即可了

流程下有子节点删除的时候,没有提示无法删除

创建流程会乱码,流程名

读流程的时候,会把脚本搞坏掉, 原因是 WebWorkflowImpl 中将脚本放在html的一个字段中
该字段是用"符号引用,而脚本中也存在"符号,所以导致脚本被切断. 该类的实现脚本到页面的
做法非常的糟糕,要好好的修订下，否则今后会有更多的异常会发生

有的时候流程设计工具会把 节点ID的值算错了

规则中需要增加动态表单的写接口, 流程的控制,bean服务的调度,消息的控制,