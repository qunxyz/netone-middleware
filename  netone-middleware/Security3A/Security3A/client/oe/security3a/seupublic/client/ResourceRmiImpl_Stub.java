// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package oe.security3a.seupublic.client;

public final class ResourceRmiImpl_Stub
    extends java.rmi.server.RemoteStub
    implements oe.security3a.client.rmi.ResourceRmi, java.rmi.Remote
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("java.lang.String SyncUser(java.lang.String, java.lang.String, java.lang.String)[]"),
	new java.rmi.server.Operation("boolean addClerk(java.lang.String, oe.security3a.seucore.obj.Clerk)"),
	new java.rmi.server.Operation("void addFormCopyResource(java.lang.String, java.lang.String[], int)"),
	new java.rmi.server.Operation("java.io.Serializable addResource(oe.security3a.seucore.obj.db.UmsProtectedobject)"),
	new java.rmi.server.Operation("java.io.Serializable addResource(oe.security3a.seucore.obj.db.UmsProtectedobject, java.lang.String)"),
	new java.rmi.server.Operation("java.io.Serializable addRole(java.lang.String, java.util.Map)"),
	new java.rmi.server.Operation("boolean checkExist(java.lang.String)"),
	new java.rmi.server.Operation("boolean dropAllSubResource(java.lang.String)"),
	new java.rmi.server.Operation("boolean dropClerk(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean dropResource(java.lang.String)"),
	new java.rmi.server.Operation("boolean dropRole(java.lang.String)"),
	new java.rmi.server.Operation("boolean dropRoles(java.util.List)"),
	new java.rmi.server.Operation("boolean dropUserRoles(java.lang.String, java.util.List)"),
	new java.rmi.server.Operation("java.util.List fetchClerk(java.lang.String, oe.security3a.seucore.obj.Clerk, java.util.Map, java.lang.String)"),
	new java.rmi.server.Operation("oe.security3a.seucore.obj.db.UmsRole fetchExtendedRole(java.lang.String)"),
	new java.rmi.server.Operation("java.util.List fetchPermission(java.lang.String)"),
	new java.rmi.server.Operation("java.util.List fetchResource(oe.security3a.seucore.obj.db.UmsProtectedobject, java.util.Map)"),
	new java.rmi.server.Operation("java.util.List fetchResource(oe.security3a.seucore.obj.db.UmsProtectedobject, java.util.Map, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List fetchRole(oe.security3a.seucore.obj.db.UmsRole, java.util.Map, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List fetchUser(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List fetchUser2role(java.lang.String, oe.security3a.seucore.obj.User2Role, java.util.Map, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List getUserRoles(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("oe.security3a.seucore.obj.Clerk loadClerk(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("oe.security3a.seucore.obj.db.UmsProtectedobject loadResourceById(java.lang.String)"),
	new java.rmi.server.Operation("oe.security3a.seucore.obj.db.UmsProtectedobject loadResourceByNatural(java.lang.String)"),
	new java.rmi.server.Operation("oe.security3a.seucore.obj.db.UmsRole loadRole(java.lang.Long)"),
	new java.rmi.server.Operation("boolean moveDownResource(java.lang.String)"),
	new java.rmi.server.Operation("boolean moveRoleDeptOpe(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean moveUpResource(java.lang.String)"),
	new java.rmi.server.Operation("boolean moveUserDeptOpe(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("long queryObjectNumberProtectedObj(oe.security3a.seucore.obj.db.UmsProtectedobject, java.util.Map, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List queryObjectProtectedObj(oe.security3a.seucore.obj.db.UmsProtectedobject, java.util.Map, int, int, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List queryObjectsClerk(java.lang.String, oe.security3a.seucore.obj.Clerk, java.util.Map, int, int)"),
	new java.rmi.server.Operation("long queryObjectsNumberClerk(java.lang.String, oe.security3a.seucore.obj.Clerk, java.util.Map)"),
	new java.rmi.server.Operation("long queryObjectsNumberRole(oe.security3a.seucore.obj.db.UmsRole, java.util.Map)"),
	new java.rmi.server.Operation("java.util.List queryObjectsRole(oe.security3a.seucore.obj.db.UmsRole, java.util.Map, int, int)"),
	new java.rmi.server.Operation("boolean resetPassword(java.lang.String, oe.security3a.seucore.obj.Clerk)"),
	new java.rmi.server.Operation("void roleRelationupdate(java.lang.String, java.lang.String, java.util.List)"),
	new java.rmi.server.Operation("java.util.List subResource(java.lang.String)"),
	new java.rmi.server.Operation("java.util.List subResourceByNaturalname(java.lang.String)"),
	new java.rmi.server.Operation("boolean updateClerk(java.lang.String, oe.security3a.seucore.obj.Clerk)"),
	new java.rmi.server.Operation("boolean updateResource(oe.security3a.seucore.obj.db.UmsProtectedobject)"),
	new java.rmi.server.Operation("boolean updateRole(java.lang.String, java.util.Map)"),
	new java.rmi.server.Operation("oe.security3a.seucore.obj.Clerk validationUserOpe(java.lang.String, java.lang.String, java.lang.String)")
    };
    
    private static final long interfaceHash = -8852040422962541650L;
    
    private static final long serialVersionUID = 2;
    
    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_SyncUser_0;
    private static java.lang.reflect.Method $method_addClerk_1;
    private static java.lang.reflect.Method $method_addFormCopyResource_2;
    private static java.lang.reflect.Method $method_addResource_3;
    private static java.lang.reflect.Method $method_addResource_4;
    private static java.lang.reflect.Method $method_addRole_5;
    private static java.lang.reflect.Method $method_checkExist_6;
    private static java.lang.reflect.Method $method_dropAllSubResource_7;
    private static java.lang.reflect.Method $method_dropClerk_8;
    private static java.lang.reflect.Method $method_dropResource_9;
    private static java.lang.reflect.Method $method_dropRole_10;
    private static java.lang.reflect.Method $method_dropRoles_11;
    private static java.lang.reflect.Method $method_dropUserRoles_12;
    private static java.lang.reflect.Method $method_fetchClerk_13;
    private static java.lang.reflect.Method $method_fetchExtendedRole_14;
    private static java.lang.reflect.Method $method_fetchPermission_15;
    private static java.lang.reflect.Method $method_fetchResource_16;
    private static java.lang.reflect.Method $method_fetchResource_17;
    private static java.lang.reflect.Method $method_fetchRole_18;
    private static java.lang.reflect.Method $method_fetchUser_19;
    private static java.lang.reflect.Method $method_fetchUser2role_20;
    private static java.lang.reflect.Method $method_getUserRoles_21;
    private static java.lang.reflect.Method $method_loadClerk_22;
    private static java.lang.reflect.Method $method_loadResourceById_23;
    private static java.lang.reflect.Method $method_loadResourceByNatural_24;
    private static java.lang.reflect.Method $method_loadRole_25;
    private static java.lang.reflect.Method $method_moveDownResource_26;
    private static java.lang.reflect.Method $method_moveRoleDeptOpe_27;
    private static java.lang.reflect.Method $method_moveUpResource_28;
    private static java.lang.reflect.Method $method_moveUserDeptOpe_29;
    private static java.lang.reflect.Method $method_queryObjectNumberProtectedObj_30;
    private static java.lang.reflect.Method $method_queryObjectProtectedObj_31;
    private static java.lang.reflect.Method $method_queryObjectsClerk_32;
    private static java.lang.reflect.Method $method_queryObjectsNumberClerk_33;
    private static java.lang.reflect.Method $method_queryObjectsNumberRole_34;
    private static java.lang.reflect.Method $method_queryObjectsRole_35;
    private static java.lang.reflect.Method $method_resetPassword_36;
    private static java.lang.reflect.Method $method_roleRelationupdate_37;
    private static java.lang.reflect.Method $method_subResource_38;
    private static java.lang.reflect.Method $method_subResourceByNaturalname_39;
    private static java.lang.reflect.Method $method_updateClerk_40;
    private static java.lang.reflect.Method $method_updateResource_41;
    private static java.lang.reflect.Method $method_updateRole_42;
    private static java.lang.reflect.Method $method_validationUserOpe_43;
    
    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		new java.lang.Class[] {
		    java.rmi.Remote.class,
		    java.lang.reflect.Method.class,
		    java.lang.Object[].class,
		    long.class
		});
	    useNewInvoke = true;
	    $method_SyncUser_0 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("SyncUser", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_addClerk_1 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("addClerk", new java.lang.Class[] {java.lang.String.class, oe.security3a.seucore.obj.Clerk.class});
	    $method_addFormCopyResource_2 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("addFormCopyResource", new java.lang.Class[] {java.lang.String.class, java.lang.String[].class, int.class});
	    $method_addResource_3 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("addResource", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsProtectedobject.class});
	    $method_addResource_4 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("addResource", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsProtectedobject.class, java.lang.String.class});
	    $method_addRole_5 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("addRole", new java.lang.Class[] {java.lang.String.class, java.util.Map.class});
	    $method_checkExist_6 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("checkExist", new java.lang.Class[] {java.lang.String.class});
	    $method_dropAllSubResource_7 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("dropAllSubResource", new java.lang.Class[] {java.lang.String.class});
	    $method_dropClerk_8 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("dropClerk", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_dropResource_9 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("dropResource", new java.lang.Class[] {java.lang.String.class});
	    $method_dropRole_10 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("dropRole", new java.lang.Class[] {java.lang.String.class});
	    $method_dropRoles_11 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("dropRoles", new java.lang.Class[] {java.util.List.class});
	    $method_dropUserRoles_12 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("dropUserRoles", new java.lang.Class[] {java.lang.String.class, java.util.List.class});
	    $method_fetchClerk_13 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("fetchClerk", new java.lang.Class[] {java.lang.String.class, oe.security3a.seucore.obj.Clerk.class, java.util.Map.class, java.lang.String.class});
	    $method_fetchExtendedRole_14 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("fetchExtendedRole", new java.lang.Class[] {java.lang.String.class});
	    $method_fetchPermission_15 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("fetchPermission", new java.lang.Class[] {java.lang.String.class});
	    $method_fetchResource_16 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("fetchResource", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsProtectedobject.class, java.util.Map.class});
	    $method_fetchResource_17 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("fetchResource", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsProtectedobject.class, java.util.Map.class, java.lang.String.class});
	    $method_fetchRole_18 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("fetchRole", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsRole.class, java.util.Map.class, java.lang.String.class});
	    $method_fetchUser_19 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("fetchUser", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_fetchUser2role_20 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("fetchUser2role", new java.lang.Class[] {java.lang.String.class, oe.security3a.seucore.obj.User2Role.class, java.util.Map.class, java.lang.String.class});
	    $method_getUserRoles_21 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("getUserRoles", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_loadClerk_22 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("loadClerk", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_loadResourceById_23 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("loadResourceById", new java.lang.Class[] {java.lang.String.class});
	    $method_loadResourceByNatural_24 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("loadResourceByNatural", new java.lang.Class[] {java.lang.String.class});
	    $method_loadRole_25 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("loadRole", new java.lang.Class[] {java.lang.Long.class});
	    $method_moveDownResource_26 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("moveDownResource", new java.lang.Class[] {java.lang.String.class});
	    $method_moveRoleDeptOpe_27 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("moveRoleDeptOpe", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_moveUpResource_28 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("moveUpResource", new java.lang.Class[] {java.lang.String.class});
	    $method_moveUserDeptOpe_29 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("moveUserDeptOpe", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_queryObjectNumberProtectedObj_30 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("queryObjectNumberProtectedObj", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsProtectedobject.class, java.util.Map.class, java.lang.String.class});
	    $method_queryObjectProtectedObj_31 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("queryObjectProtectedObj", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsProtectedobject.class, java.util.Map.class, int.class, int.class, java.lang.String.class});
	    $method_queryObjectsClerk_32 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("queryObjectsClerk", new java.lang.Class[] {java.lang.String.class, oe.security3a.seucore.obj.Clerk.class, java.util.Map.class, int.class, int.class});
	    $method_queryObjectsNumberClerk_33 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("queryObjectsNumberClerk", new java.lang.Class[] {java.lang.String.class, oe.security3a.seucore.obj.Clerk.class, java.util.Map.class});
	    $method_queryObjectsNumberRole_34 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("queryObjectsNumberRole", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsRole.class, java.util.Map.class});
	    $method_queryObjectsRole_35 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("queryObjectsRole", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsRole.class, java.util.Map.class, int.class, int.class});
	    $method_resetPassword_36 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("resetPassword", new java.lang.Class[] {java.lang.String.class, oe.security3a.seucore.obj.Clerk.class});
	    $method_roleRelationupdate_37 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("roleRelationupdate", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.util.List.class});
	    $method_subResource_38 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("subResource", new java.lang.Class[] {java.lang.String.class});
	    $method_subResourceByNaturalname_39 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("subResourceByNaturalname", new java.lang.Class[] {java.lang.String.class});
	    $method_updateClerk_40 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("updateClerk", new java.lang.Class[] {java.lang.String.class, oe.security3a.seucore.obj.Clerk.class});
	    $method_updateResource_41 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("updateResource", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsProtectedobject.class});
	    $method_updateRole_42 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("updateRole", new java.lang.Class[] {java.lang.String.class, java.util.Map.class});
	    $method_validationUserOpe_43 = oe.security3a.client.rmi.ResourceRmi.class.getMethod("validationUserOpe", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }
    
    // constructors
    public ResourceRmiImpl_Stub() {
	super();
    }
    public ResourceRmiImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of SyncUser(String, String, String)
    public java.lang.String[] SyncUser(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_SyncUser_0, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 6788138561528176163L);
		return ((java.lang.String[]) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String[] $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String[]) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addClerk(String, Clerk)
    public boolean addClerk(java.lang.String $param_String_1, oe.security3a.seucore.obj.Clerk $param_Clerk_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_addClerk_1, new java.lang.Object[] {$param_String_1, $param_Clerk_2}, 2699251529191637824L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Clerk_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addFormCopyResource(String, String[], int)
    public void addFormCopyResource(java.lang.String $param_String_1, java.lang.String[] $param_arrayOf_String_2, int $param_int_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_addFormCopyResource_2, new java.lang.Object[] {$param_String_1, $param_arrayOf_String_2, new java.lang.Integer($param_int_3)}, -4603541790264476139L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_arrayOf_String_2);
		    out.writeInt($param_int_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addResource(UmsProtectedobject)
    public java.io.Serializable addResource(oe.security3a.seucore.obj.db.UmsProtectedobject $param_UmsProtectedobject_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_addResource_3, new java.lang.Object[] {$param_UmsProtectedobject_1}, 1509533383844034377L);
		return ((java.io.Serializable) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 3, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsProtectedobject_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.io.Serializable $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.io.Serializable) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addResource(UmsProtectedobject, String)
    public java.io.Serializable addResource(oe.security3a.seucore.obj.db.UmsProtectedobject $param_UmsProtectedobject_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_addResource_4, new java.lang.Object[] {$param_UmsProtectedobject_1, $param_String_2}, -1748336223485365352L);
		return ((java.io.Serializable) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 4, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsProtectedobject_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.io.Serializable $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.io.Serializable) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addRole(String, Map)
    public java.io.Serializable addRole(java.lang.String $param_String_1, java.util.Map $param_Map_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_addRole_5, new java.lang.Object[] {$param_String_1, $param_Map_2}, -7434277783348822327L);
		return ((java.io.Serializable) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 5, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Map_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.io.Serializable $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.io.Serializable) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of checkExist(String)
    public boolean checkExist(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_checkExist_6, new java.lang.Object[] {$param_String_1}, -7149324620357741348L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 6, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropAllSubResource(String)
    public boolean dropAllSubResource(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_dropAllSubResource_7, new java.lang.Object[] {$param_String_1}, 7496701096913968256L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 7, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropClerk(String, String)
    public boolean dropClerk(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_dropClerk_8, new java.lang.Object[] {$param_String_1, $param_String_2}, -7642034804957619508L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 8, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropResource(String)
    public boolean dropResource(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_dropResource_9, new java.lang.Object[] {$param_String_1}, -3296042006252061014L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 9, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropRole(String)
    public boolean dropRole(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_dropRole_10, new java.lang.Object[] {$param_String_1}, 8170020339836761459L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 10, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropRoles(List)
    public boolean dropRoles(java.util.List $param_List_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_dropRoles_11, new java.lang.Object[] {$param_List_1}, 1047878997704648399L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 11, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_List_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dropUserRoles(String, List)
    public boolean dropUserRoles(java.lang.String $param_String_1, java.util.List $param_List_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_dropUserRoles_12, new java.lang.Object[] {$param_String_1, $param_List_2}, 1155897459632522736L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 12, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_List_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchClerk(String, Clerk, Map, String)
    public java.util.List fetchClerk(java.lang.String $param_String_1, oe.security3a.seucore.obj.Clerk $param_Clerk_2, java.util.Map $param_Map_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchClerk_13, new java.lang.Object[] {$param_String_1, $param_Clerk_2, $param_Map_3, $param_String_4}, 6612362559791986773L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 13, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Clerk_2);
		    out.writeObject($param_Map_3);
		    out.writeObject($param_String_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchExtendedRole(String)
    public oe.security3a.seucore.obj.db.UmsRole fetchExtendedRole(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchExtendedRole_14, new java.lang.Object[] {$param_String_1}, -8495938907114670777L);
		return ((oe.security3a.seucore.obj.db.UmsRole) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 14, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.security3a.seucore.obj.db.UmsRole $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.security3a.seucore.obj.db.UmsRole) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchPermission(String)
    public java.util.List fetchPermission(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchPermission_15, new java.lang.Object[] {$param_String_1}, -869516208938528053L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 15, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchResource(UmsProtectedobject, Map)
    public java.util.List fetchResource(oe.security3a.seucore.obj.db.UmsProtectedobject $param_UmsProtectedobject_1, java.util.Map $param_Map_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchResource_16, new java.lang.Object[] {$param_UmsProtectedobject_1, $param_Map_2}, 8597152595734484356L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 16, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsProtectedobject_1);
		    out.writeObject($param_Map_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchResource(UmsProtectedobject, Map, String)
    public java.util.List fetchResource(oe.security3a.seucore.obj.db.UmsProtectedobject $param_UmsProtectedobject_1, java.util.Map $param_Map_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchResource_17, new java.lang.Object[] {$param_UmsProtectedobject_1, $param_Map_2, $param_String_3}, 7407443664387178934L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 17, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsProtectedobject_1);
		    out.writeObject($param_Map_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchRole(UmsRole, Map, String)
    public java.util.List fetchRole(oe.security3a.seucore.obj.db.UmsRole $param_UmsRole_1, java.util.Map $param_Map_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchRole_18, new java.lang.Object[] {$param_UmsRole_1, $param_Map_2, $param_String_3}, 9012942565931702862L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 18, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsRole_1);
		    out.writeObject($param_Map_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchUser(String, String)
    public java.util.List fetchUser(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchUser_19, new java.lang.Object[] {$param_String_1, $param_String_2}, 2477865903439354961L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 19, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fetchUser2role(String, User2Role, Map, String)
    public java.util.List fetchUser2role(java.lang.String $param_String_1, oe.security3a.seucore.obj.User2Role $param_User2Role_2, java.util.Map $param_Map_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_fetchUser2role_20, new java.lang.Object[] {$param_String_1, $param_User2Role_2, $param_Map_3, $param_String_4}, 3007410383054361042L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 20, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_User2Role_2);
		    out.writeObject($param_Map_3);
		    out.writeObject($param_String_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getUserRoles(String, String)
    public java.util.List getUserRoles(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_getUserRoles_21, new java.lang.Object[] {$param_String_1, $param_String_2}, -7490894687507559008L);
	    return ((java.util.List) $result);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 21, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    java.util.List $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = (java.util.List) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of loadClerk(String, String)
    public oe.security3a.seucore.obj.Clerk loadClerk(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_loadClerk_22, new java.lang.Object[] {$param_String_1, $param_String_2}, 7992926591649022325L);
		return ((oe.security3a.seucore.obj.Clerk) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 22, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.security3a.seucore.obj.Clerk $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.security3a.seucore.obj.Clerk) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of loadResourceById(String)
    public oe.security3a.seucore.obj.db.UmsProtectedobject loadResourceById(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_loadResourceById_23, new java.lang.Object[] {$param_String_1}, -2765830230228499939L);
		return ((oe.security3a.seucore.obj.db.UmsProtectedobject) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 23, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.security3a.seucore.obj.db.UmsProtectedobject $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.security3a.seucore.obj.db.UmsProtectedobject) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of loadResourceByNatural(String)
    public oe.security3a.seucore.obj.db.UmsProtectedobject loadResourceByNatural(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_loadResourceByNatural_24, new java.lang.Object[] {$param_String_1}, 774692053005178566L);
		return ((oe.security3a.seucore.obj.db.UmsProtectedobject) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 24, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.security3a.seucore.obj.db.UmsProtectedobject $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.security3a.seucore.obj.db.UmsProtectedobject) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of loadRole(Long)
    public oe.security3a.seucore.obj.db.UmsRole loadRole(java.lang.Long $param_Long_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_loadRole_25, new java.lang.Object[] {$param_Long_1}, -4843989370997608163L);
		return ((oe.security3a.seucore.obj.db.UmsRole) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 25, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_Long_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.security3a.seucore.obj.db.UmsRole $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.security3a.seucore.obj.db.UmsRole) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moveDownResource(String)
    public boolean moveDownResource(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_moveDownResource_26, new java.lang.Object[] {$param_String_1}, 8921535932061701847L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 26, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moveRoleDeptOpe(String, String, String)
    public boolean moveRoleDeptOpe(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_moveRoleDeptOpe_27, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -6947232796479806422L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 27, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moveUpResource(String)
    public boolean moveUpResource(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_moveUpResource_28, new java.lang.Object[] {$param_String_1}, 6751351799788629888L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 28, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moveUserDeptOpe(String, String, String)
    public boolean moveUserDeptOpe(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_moveUserDeptOpe_29, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -1679565849855842759L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 29, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectNumberProtectedObj(UmsProtectedobject, Map, String)
    public long queryObjectNumberProtectedObj(oe.security3a.seucore.obj.db.UmsProtectedobject $param_UmsProtectedobject_1, java.util.Map $param_Map_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectNumberProtectedObj_30, new java.lang.Object[] {$param_UmsProtectedobject_1, $param_Map_2, $param_String_3}, 3917993063483022552L);
		return ((java.lang.Long) $result).longValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 30, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsProtectedobject_1);
		    out.writeObject($param_Map_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		long $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readLong();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectProtectedObj(UmsProtectedobject, Map, int, int, String)
    public java.util.List queryObjectProtectedObj(oe.security3a.seucore.obj.db.UmsProtectedobject $param_UmsProtectedobject_1, java.util.Map $param_Map_2, int $param_int_3, int $param_int_4, java.lang.String $param_String_5)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectProtectedObj_31, new java.lang.Object[] {$param_UmsProtectedobject_1, $param_Map_2, new java.lang.Integer($param_int_3), new java.lang.Integer($param_int_4), $param_String_5}, 884204290965570747L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 31, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsProtectedobject_1);
		    out.writeObject($param_Map_2);
		    out.writeInt($param_int_3);
		    out.writeInt($param_int_4);
		    out.writeObject($param_String_5);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsClerk(String, Clerk, Map, int, int)
    public java.util.List queryObjectsClerk(java.lang.String $param_String_1, oe.security3a.seucore.obj.Clerk $param_Clerk_2, java.util.Map $param_Map_3, int $param_int_4, int $param_int_5)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsClerk_32, new java.lang.Object[] {$param_String_1, $param_Clerk_2, $param_Map_3, new java.lang.Integer($param_int_4), new java.lang.Integer($param_int_5)}, -3803770144971794414L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 32, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Clerk_2);
		    out.writeObject($param_Map_3);
		    out.writeInt($param_int_4);
		    out.writeInt($param_int_5);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsNumberClerk(String, Clerk, Map)
    public long queryObjectsNumberClerk(java.lang.String $param_String_1, oe.security3a.seucore.obj.Clerk $param_Clerk_2, java.util.Map $param_Map_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsNumberClerk_33, new java.lang.Object[] {$param_String_1, $param_Clerk_2, $param_Map_3}, 7606941368888761283L);
		return ((java.lang.Long) $result).longValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 33, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Clerk_2);
		    out.writeObject($param_Map_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		long $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readLong();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsNumberRole(UmsRole, Map)
    public long queryObjectsNumberRole(oe.security3a.seucore.obj.db.UmsRole $param_UmsRole_1, java.util.Map $param_Map_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsNumberRole_34, new java.lang.Object[] {$param_UmsRole_1, $param_Map_2}, 6116781496451802429L);
		return ((java.lang.Long) $result).longValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 34, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsRole_1);
		    out.writeObject($param_Map_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		long $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readLong();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of queryObjectsRole(UmsRole, Map, int, int)
    public java.util.List queryObjectsRole(oe.security3a.seucore.obj.db.UmsRole $param_UmsRole_1, java.util.Map $param_Map_2, int $param_int_3, int $param_int_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_queryObjectsRole_35, new java.lang.Object[] {$param_UmsRole_1, $param_Map_2, new java.lang.Integer($param_int_3), new java.lang.Integer($param_int_4)}, -4738256444346102625L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 35, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsRole_1);
		    out.writeObject($param_Map_2);
		    out.writeInt($param_int_3);
		    out.writeInt($param_int_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of resetPassword(String, Clerk)
    public boolean resetPassword(java.lang.String $param_String_1, oe.security3a.seucore.obj.Clerk $param_Clerk_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_resetPassword_36, new java.lang.Object[] {$param_String_1, $param_Clerk_2}, -5368106816393496857L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 36, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Clerk_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of roleRelationupdate(String, String, List)
    public void roleRelationupdate(java.lang.String $param_String_1, java.lang.String $param_String_2, java.util.List $param_List_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_roleRelationupdate_37, new java.lang.Object[] {$param_String_1, $param_String_2, $param_List_3}, -2278084794035689746L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 37, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_List_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of subResource(String)
    public java.util.List subResource(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_subResource_38, new java.lang.Object[] {$param_String_1}, 1936669458051577152L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 38, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of subResourceByNaturalname(String)
    public java.util.List subResourceByNaturalname(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_subResourceByNaturalname_39, new java.lang.Object[] {$param_String_1}, -245636705657490077L);
		return ((java.util.List) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 39, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.util.List $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.util.List) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateClerk(String, Clerk)
    public boolean updateClerk(java.lang.String $param_String_1, oe.security3a.seucore.obj.Clerk $param_Clerk_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_updateClerk_40, new java.lang.Object[] {$param_String_1, $param_Clerk_2}, 466927926625413367L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 40, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Clerk_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateResource(UmsProtectedobject)
    public boolean updateResource(oe.security3a.seucore.obj.db.UmsProtectedobject $param_UmsProtectedobject_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_updateResource_41, new java.lang.Object[] {$param_UmsProtectedobject_1}, 4800288328048325176L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 41, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_UmsProtectedobject_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateRole(String, Map)
    public boolean updateRole(java.lang.String $param_String_1, java.util.Map $param_Map_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_updateRole_42, new java.lang.Object[] {$param_String_1, $param_Map_2}, 4216179927519812861L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 42, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_Map_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of validationUserOpe(String, String, String)
    public oe.security3a.seucore.obj.Clerk validationUserOpe(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_validationUserOpe_43, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -1490135253516697105L);
		return ((oe.security3a.seucore.obj.Clerk) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 43, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		oe.security3a.seucore.obj.Clerk $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (oe.security3a.seucore.obj.Clerk) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
