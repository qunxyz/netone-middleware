// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package oe.security3a.seupublic.client;

public final class CupmRmiImpl_Stub
    extends java.rmi.server.RemoteStub
    implements oe.security3a.client.rmi.CupmRmi, java.rmi.Remote
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("boolean checkRolePermission(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean checkRolePermissionCore(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean checkRoleSelfPermission(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean checkRoleSelfPermissionCore(java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean checkUserPermission(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean checkUserPermissionCore(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.lang.String fetchConfig(java.lang.String)"),
	new java.rmi.server.Operation("void initCacheRole(java.lang.String)"),
	new java.rmi.server.Operation("void initCacheRoleCore(java.lang.String)"),
	new java.rmi.server.Operation("void initCacheUser(java.lang.String)"),
	new java.rmi.server.Operation("void initCacheall()"),
	new java.rmi.server.Operation("boolean log(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("java.util.List logList(oe.security3a.seucore.obj.db.UmsOperationLog, java.util.Map, java.lang.String, int, int)"),
	new java.rmi.server.Operation("long logsNumber(oe.security3a.seucore.obj.db.UmsOperationLog, java.util.Map, java.lang.String)"),
	new java.rmi.server.Operation("java.lang.String queryLog(java.lang.String)[]"),
	new java.rmi.server.Operation("java.lang.String todo(java.lang.String, java.lang.String)")
    };
    
    private static final long interfaceHash = -9065541931682708016L;
    
    private static final long serialVersionUID = 2;
    
    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_checkRolePermission_0;
    private static java.lang.reflect.Method $method_checkRolePermissionCore_1;
    private static java.lang.reflect.Method $method_checkRoleSelfPermission_2;
    private static java.lang.reflect.Method $method_checkRoleSelfPermissionCore_3;
    private static java.lang.reflect.Method $method_checkUserPermission_4;
    private static java.lang.reflect.Method $method_checkUserPermissionCore_5;
    private static java.lang.reflect.Method $method_fetchConfig_6;
    private static java.lang.reflect.Method $method_initCacheRole_7;
    private static java.lang.reflect.Method $method_initCacheRoleCore_8;
    private static java.lang.reflect.Method $method_initCacheUser_9;
    private static java.lang.reflect.Method $method_initCacheall_10;
    private static java.lang.reflect.Method $method_log_11;
    private static java.lang.reflect.Method $method_logList_12;
    private static java.lang.reflect.Method $method_logsNumber_13;
    private static java.lang.reflect.Method $method_queryLog_14;
    private static java.lang.reflect.Method $method_todo_15;
    
    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		new java.lang.Class[] {
		    java.rmi.Remote.class,
		    java.lang.reflect.Method.class,
		    java.lang.Object[].class,
		    long.class
		});
	    useNewInvoke = true;
	    $method_checkRolePermission_0 = oe.security3a.client.rmi.CupmRmi.class.getMethod("checkRolePermission", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_checkRolePermissionCore_1 = oe.security3a.client.rmi.CupmRmi.class.getMethod("checkRolePermissionCore", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_checkRoleSelfPermission_2 = oe.security3a.client.rmi.CupmRmi.class.getMethod("checkRoleSelfPermission", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_checkRoleSelfPermissionCore_3 = oe.security3a.client.rmi.CupmRmi.class.getMethod("checkRoleSelfPermissionCore", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_checkUserPermission_4 = oe.security3a.client.rmi.CupmRmi.class.getMethod("checkUserPermission", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_checkUserPermissionCore_5 = oe.security3a.client.rmi.CupmRmi.class.getMethod("checkUserPermissionCore", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_fetchConfig_6 = oe.security3a.client.rmi.CupmRmi.class.getMethod("fetchConfig", new java.lang.Class[] {java.lang.String.class});
	    $method_initCacheRole_7 = oe.security3a.client.rmi.CupmRmi.class.getMethod("initCacheRole", new java.lang.Class[] {java.lang.String.class});
	    $method_initCacheRoleCore_8 = oe.security3a.client.rmi.CupmRmi.class.getMethod("initCacheRoleCore", new java.lang.Class[] {java.lang.String.class});
	    $method_initCacheUser_9 = oe.security3a.client.rmi.CupmRmi.class.getMethod("initCacheUser", new java.lang.Class[] {java.lang.String.class});
	    $method_initCacheall_10 = oe.security3a.client.rmi.CupmRmi.class.getMethod("initCacheall", new java.lang.Class[] {});
	    $method_log_11 = oe.security3a.client.rmi.CupmRmi.class.getMethod("log", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_logList_12 = oe.security3a.client.rmi.CupmRmi.class.getMethod("logList", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsOperationLog.class, java.util.Map.class, java.lang.String.class, int.class, int.class});
	    $method_logsNumber_13 = oe.security3a.client.rmi.CupmRmi.class.getMethod("logsNumber", new java.lang.Class[] {oe.security3a.seucore.obj.db.UmsOperationLog.class, java.util.Map.class, java.lang.String.class});
	    $method_queryLog_14 = oe.security3a.client.rmi.CupmRmi.class.getMethod("queryLog", new java.lang.Class[] {java.lang.String.class});
	    $method_todo_15 = oe.security3a.client.rmi.CupmRmi.class.getMethod("todo", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }
    
    // constructors
    public CupmRmiImpl_Stub() {
	super();
    }
    public CupmRmiImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of checkRolePermission(String, String, String)
    public boolean checkRolePermission(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_checkRolePermission_0, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 4888925561119516389L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
		out.writeObject($param_String_3);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    boolean $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = in.readBoolean();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of checkRolePermissionCore(String, String, String)
    public boolean checkRolePermissionCore(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_checkRolePermissionCore_1, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 3029487177548687765L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
		out.writeObject($param_String_3);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    boolean $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = in.readBoolean();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of checkRoleSelfPermission(String, String, String)
    public boolean checkRoleSelfPermission(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_checkRoleSelfPermission_2, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 925392374936604626L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
		out.writeObject($param_String_3);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    boolean $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = in.readBoolean();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of checkRoleSelfPermissionCore(String, String, String)
    public boolean checkRoleSelfPermissionCore(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_checkRoleSelfPermissionCore_3, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -9176998151656307580L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 3, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
		out.writeObject($param_String_3);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    boolean $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = in.readBoolean();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of checkUserPermission(String, String, String, String)
    public boolean checkUserPermission(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_checkUserPermission_4, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4}, 1770983099323614613L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 4, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
		out.writeObject($param_String_3);
		out.writeObject($param_String_4);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    boolean $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = in.readBoolean();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of checkUserPermissionCore(String, String, String, String)
    public boolean checkUserPermissionCore(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_checkUserPermissionCore_5, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4}, -5978440521603341089L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 5, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
		out.writeObject($param_String_3);
		out.writeObject($param_String_4);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    boolean $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = in.readBoolean();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of fetchConfig(String)
    public java.lang.String fetchConfig(java.lang.String $param_String_1)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_fetchConfig_6, new java.lang.Object[] {$param_String_1}, 7919569691579463003L);
	    return ((java.lang.String) $result);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 6, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    java.lang.String $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of initCacheRole(String)
    public void initCacheRole(java.lang.String $param_String_1)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    ref.invoke(this, $method_initCacheRole_7, new java.lang.Object[] {$param_String_1}, -6282133292119654757L);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 7, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    ref.done(call);
	}
    }
    
    // implementation of initCacheRoleCore(String)
    public void initCacheRoleCore(java.lang.String $param_String_1)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    ref.invoke(this, $method_initCacheRoleCore_8, new java.lang.Object[] {$param_String_1}, 8488920176988970969L);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 8, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    ref.done(call);
	}
    }
    
    // implementation of initCacheUser(String)
    public void initCacheUser(java.lang.String $param_String_1)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    ref.invoke(this, $method_initCacheUser_9, new java.lang.Object[] {$param_String_1}, 7202392616855357734L);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 9, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    ref.done(call);
	}
    }
    
    // implementation of initCacheall()
    public void initCacheall()
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    ref.invoke(this, $method_initCacheall_10, null, 2989999673558813106L);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 10, interfaceHash);
	    ref.invoke(call);
	    ref.done(call);
	}
    }
    
    // implementation of log(String, String, String, String, String)
    public boolean log(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4, java.lang.String $param_String_5)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_log_11, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4, $param_String_5}, 8999362055218632016L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 11, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
		out.writeObject($param_String_3);
		out.writeObject($param_String_4);
		out.writeObject($param_String_5);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    boolean $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = in.readBoolean();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of logList(UmsOperationLog, Map, String, int, int)
    public java.util.List logList(oe.security3a.seucore.obj.db.UmsOperationLog $param_UmsOperationLog_1, java.util.Map $param_Map_2, java.lang.String $param_String_3, int $param_int_4, int $param_int_5)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_logList_12, new java.lang.Object[] {$param_UmsOperationLog_1, $param_Map_2, $param_String_3, new java.lang.Integer($param_int_4), new java.lang.Integer($param_int_5)}, -6566443951429688238L);
	    return ((java.util.List) $result);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 12, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_UmsOperationLog_1);
		out.writeObject($param_Map_2);
		out.writeObject($param_String_3);
		out.writeInt($param_int_4);
		out.writeInt($param_int_5);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    java.util.List $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = (java.util.List) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of logsNumber(UmsOperationLog, Map, String)
    public long logsNumber(oe.security3a.seucore.obj.db.UmsOperationLog $param_UmsOperationLog_1, java.util.Map $param_Map_2, java.lang.String $param_String_3)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_logsNumber_13, new java.lang.Object[] {$param_UmsOperationLog_1, $param_Map_2, $param_String_3}, 8252707500489229052L);
	    return ((java.lang.Long) $result).longValue();
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 13, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_UmsOperationLog_1);
		out.writeObject($param_Map_2);
		out.writeObject($param_String_3);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    long $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = in.readLong();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of queryLog(String)
    public java.lang.String[] queryLog(java.lang.String $param_String_1)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_queryLog_14, new java.lang.Object[] {$param_String_1}, -9065563880911952883L);
	    return ((java.lang.String[]) $result);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 14, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    java.lang.String[] $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = (java.lang.String[]) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
    
    // implementation of todo(String, String)
    public java.lang.String todo(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.lang.Exception
    {
	if (useNewInvoke) {
	    Object $result = ref.invoke(this, $method_todo_15, new java.lang.Object[] {$param_String_1, $param_String_2}, 9070479293440148805L);
	    return ((java.lang.String) $result);
	} else {
	    java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 15, interfaceHash);
	    try {
		java.io.ObjectOutput out = call.getOutputStream();
		out.writeObject($param_String_1);
		out.writeObject($param_String_2);
	    } catch (java.io.IOException e) {
		throw new java.rmi.MarshalException("error marshalling arguments", e);
	    }
	    ref.invoke(call);
	    java.lang.String $result;
	    try {
		java.io.ObjectInput in = call.getInputStream();
		$result = (java.lang.String) in.readObject();
	    } catch (java.io.IOException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } catch (java.lang.ClassNotFoundException e) {
		throw new java.rmi.UnmarshalException("error unmarshalling return", e);
	    } finally {
		ref.done(call);
	    }
	    return $result;
	}
    }
}
