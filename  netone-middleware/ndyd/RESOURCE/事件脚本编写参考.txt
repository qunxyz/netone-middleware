/** 
初始化处理脚本:initscript$:expression$!  参考: initscript$:alert('init');$!  
获得焦点时处理脚本:focusscript$:expression$!  参考: focusscript$:alert('focus');$!  
失去焦点时处理脚本:losefocusscript$:expression$!  参考:blurscript$:alert('losefocus');$!  

备注: 所有#需要转成$$
formcode : 指定表单对应formcode
语法：使用jquery自定义的语法
复杂脚本编写参照jquery选择器写法
*/
/** 当前表单交互JS */
主表单元素调用对象 $(this).parents('table') 等价于 $(form)
所有子表单元素调用对象 $(this).parents('table') 等价于 $(form)
当前行子表单元素调用对象 $(this).parent().parent() 等价于 $(currform)
初始化处理脚本:针对当前表单的字段的初始化,需要注意对子表单使用initscript脚本需要使用上遍历each
API调用:
1.调用主表单focusscript及losefocusscript 当前表单字段值 $(this).val();
2.调用主表单focusscript及losefocusscript 当前表单指定字段值 $(this).parents('table').find('$$column1').val(); 等价于 $('table#formcode').find('#column1').val();
3.调用子表单focusscript及losefocusscript 当前表单当前行字段值 $(this).val();
4.调用子表单focusscript及losefocusscript 当前表单当前行指定字段值 $(this).parent().parent().find('$$column1').val();
5.调用主表单initscript 当前表单字段值 $(object).val('1'); 等价于 $('table$$formcode').find('$$columnN').val('1');
	注: $(object) 等价于 $('table$$formcode').find('$$columnN') columnN代表当前表单字段的字段值
6.调用主表单initscript 当前表单所有当前字段值 
	$(object).each(function(){
		if ($(this).val()!='') $(this).val('1');
	});
	注: $(object) 等价于 $('table$$formcode').find('$$columnN') columnN代表当前表单字段的字段值

合计、平均值、自定义计算公式函数调用说明：
【术语】:【数值计算函数语句】
$calculate(中间语法部分).$endcalculate; //自定义计算表达式函数语句
$sum(中间语法部分).$endsum; //求和函数语句
$avg(中间语法部分).$endavg; //平均值函数语句
注:只支持数值计算
【写法】:
$calculate{..} 括号里填写自定义计算公式的表单对象 同时结束后加.$endcalculate;
$sum{..}       括号里填写计算总和的表单对象 同时结束后加.$endsum;
$avg{..}	   括号里填写计算平均值的表单对象 同时结束后加.$endavg;
注:下面方法只能在一条函数语句中调用一次
【函数调用方法】:
$column(..)    括号里填写需要计算的字段名 多个字段以逗号隔开 例:column1,column2,column3
$to(..)        括号里填写接收计算结果的字段名 多个字段以逗号隔开 例:column1,column2,column3
$jumpto{..}    括号里填写接收指定计算结果的对象 支持一个或多个 例:$('table#formcode').find('#column1'),$('table#formcode').find('#column2')
$expression{...} 括号里填写计算表达式(+-*/%) 例: column1+column2+((column4*column5)/2)-1
$float(2)      括号里填写保留小数点位数 只有一个参数配置

计算总和脚本:
当前主表单
$sum{$(form)}.$column(column1,column2,column3).$to(column4).$float(2).$endsum;
当前子表单
$sum{$(currform)}.$column(column1,column2,column3).$to(column4).$float(2).$endsum;

计算平均值脚本:
当前主表单
$avg{$(form)}.$column(column1,column2,column3).$to(column4).$float(2).$endavg;
当前子表单
$avg{$(currform)}.$column(column1,column2,column3).$to(column4).$float(2).$endavg;

自定义计算公式脚本
主表单
$calculate{$(form)}.$column(column1,column2,column3).$expression{(column1*column2)+column3}.$to(column4,column5).$float(2).$endcalculate;
子表单
$calculate{$(currform)}.$column(column1,column2,column3).$expression{(column1*column2)+column3}.$to(column4).$float(2).$endcalculate;

主表单与子表单数值互写脚本
主表单传计算数值给子表单
$calculate{$(form)}.$column(column1,column2,column3).$expression{(column1*column2)+column3}.$jumpto{$('table#formcode').find('#column1')}.$to(column4).$float(2).$endcalculate;
子表单传计算数值给主表单
$calculate{$(currform)}.$column(column1,column2,column3).$expression{(column1*column2)+column3}.$jumpto{$('table#formcode').find('#column1')}.$to(column4).$float(2).$endcalculate;

例子:
1.合计例子 计算子表单鼠标所在行指定N列的值并赋值到当前行所在指定列
blurscript$:var o =  $(this).parent().parent();var c10 = o.find('$$column10').val();var c6 = o.find('$$column6').val();var c7 = o.find('$$column7').val();c10= isNaN(c10)?0:parseFloat(c10);c6= isNaN(c6)?0:parseFloat(c6);c7= isNaN(c7)?0:parseFloat(c7); o.find('$$column8').val(c10+c6+c7);$!
2.总和例子 计算所有子表单某列每行字段值总和
var sum = 0;
$('table#formcode').find('#column1').each(function(){
	sum += $(this).val();
});
alert(sum);

复杂应用
/** 主表单与子表单参数值交互JS　*/
/** 主表单指定字段访问 */
$('table#formcode').find('#column1').val();

/** 访问子表单每行指定列字段的值 */
$('table#formcode').find('#column1').each(function(){
	alert($(this).val());
});

/** 访问子表单每行N列字段的值 */
$('table#formcode').find('tr.table_tr_content').each(function(){
	alert($(this).find('$$column1').val());
});

/** 支持时间格式转换脚本 
 * 对Date的扩展，将 Date 转化为指定格式的String    
 * 月(M)、日(d)、12小时(h)、24小时(H)、分(m)、秒(s)、周(E)、季度(q) 可以用 1-2 个占位符    
 * 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)    
 * eg:    
 * (new Date()).pattern("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423    
 * (new Date()).pattern("yyyy-MM-dd E HH:mm:ss") ==> 2009-03-10 二 20:09:04    
 * (new Date()).pattern("yyyy-MM-dd EE hh:mm:ss") ==> 2009-03-10 周二 08:09:04    
 * (new Date()).pattern("yyyy-MM-dd EEE hh:mm:ss") ==> 2009-03-10 星期二 08:09:04    
 * (new Date()).pattern("yyyy-M-d h:m:s.S") ==> 2006-7-2 8:9:4.18   
 **/